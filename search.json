[{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":null,"dir":"","previous_headings":"","what":"Claude Code Configuration","title":"Claude Code Configuration","text":"file contains configuration commands Claude Code help package development.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"package-information","dir":"","previous_headings":"","what":"Package Information","title":"Claude Code Configuration","text":"Package Name: realestatebr Type: R Package Brazilian real estate market data Main Branch: main Mission: Create definitive R package Brazilian real estate data - reliable, well-documented, easy use","code":""},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"current-challenges","dir":"","previous_headings":"","what":"Current challenges","title":"Claude Code Configuration","text":"Multiple legacy functions inconsistent interfaces leading unexpected errors. Core functions aren’t working .","code":""},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"goals-for-v06x","dir":"","previous_headings":"","what":"Goals for v0.6.x","title":"Claude Code Configuration","text":"Simplify codebase removing (1) obsolete/outdated/unnecessary functions, (2) obsolete/outdated/unnecessary documentation, (3) repetitive import/download logic, (4) unnecessary complexity. codebase package large overly complex purpose. Almost functions now internal, still feature extensive documentation. can supress/simplify removing examples unnecessary details. shoudld, however, keep ‘core’ documentation (title, description, param, source, references, etc.) since useful developers. still several functions sole purpose printing deprecation warnings. removed entirely. Several functions questionable metadata like ‘download_time’, ‘download_info’, etc. kept serve clear purpose. Otherwise, removed. import/download logic repeated several places. consolidated generic helper functions can reused across datasets. currently ambiguity word ‘legacy’ package. Due architcture transition v0.4.0, functions except list_datasets() get_dataset() considered ‘legacy’. However, functions backbone package. change now internal. Despite , several functions “treat” legacy. core get_from_legacy_function instance implies calls legacy functions, fact calls main internal functions. confusing fixed.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"goals-for-v05x","dir":"","previous_headings":"","what":"Goals for v0.5.x","title":"Claude Code Configuration","text":"core functions working perfectly. means get_dataset() work flawlessly datasets source = 'cache' source = 'fresh'. Make sure datasets can imported via ‘cache’. ensures user can always get data quickly conviniently. Make sure targets pipeline fully functional can update datasets automatically weekly basis. Make codebase simpler abandoning legacy functions, deprecation warnings, etc. words, make breaking changes (1) makes codebase simpler; (2) makes codebase significantly efficient; (3) makes codebaes less error-prone; (4) makes end-user experience better.","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"phase-1-core-functions--completed-v040","dir":"","previous_headings":"Architecture Transition Status","what":"Phase 1: Core Functions ✅ COMPLETED (v0.4.0)","title":"Claude Code Configuration","text":"✅ list_datasets() get_dataset() functions implemented ✅ Dataset registry system created ✅ Unified API backward compatibility ✅ legacy functions modernized","code":""},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"phase-2-data-pipeline--completed","dir":"","previous_headings":"Architecture Transition Status","what":"Phase 2: Data Pipeline ✅ COMPLETED","title":"Claude Code Configuration","text":"✅ {targets} workflow automated data processing ✅ Weekly GitHub Actions workflow ✅ 37 targets across 12 datasets ✅ Data validation quality checks","code":""},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"phase-3-scale-up--planned","dir":"","previous_headings":"Architecture Transition Status","what":"Phase 3: Scale Up ⏳ PLANNED","title":"Claude Code Configuration","text":"⏳ DuckDB integration large datasets (ITBI, IPTU) ⏳ Lazy query support ⏳ Large dataset handling","code":""},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"id_-manual-review-needed","dir":"","previous_headings":"Architecture Transition Status > Phase 3: Scale Up ⏳ PLANNED","what":"🔍 MANUAL REVIEW NEEDED","title":"Claude Code Configuration","text":"Monthly consumption tables: Date parsing state matching Steel production: Multi-header Excel structure validation PIM data: Excel serial date conversion verification CUB prices: State abbreviation mapping accuracy","code":""},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"core-technologies--dependencies","dir":"","previous_headings":"","what":"Core Technologies & Dependencies","title":"Claude Code Configuration","text":"","code":"# Core package dependencies library(dplyr)          # Data manipulation library(tidyr)          # Data tidying library(readr)          # Data reading library(rvest)          # Web scraping library(httr)           # HTTP requests library(yaml)           # Configuration files library(stringr)           # String templates  # Development tools library(devtools)       # Package development library(usethis)        # Package setup utilities library(testthat)       # Testing framework library(pkgdown)        # Documentation website  # Data pipeline (Phase 2) library(targets)        # Workflow management library(tarchetypes)    # Additional target types  # Large data support (Phase 3) library(duckdb)         # In-process database library(DBI)            # Database interface"},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"main-interface","dir":"","previous_headings":"Key Functions & Architecture","what":"Main Interface","title":"Claude Code Configuration","text":"list_datasets(): Dataset discovery function get_dataset(name): Unified data access function","code":""},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"dataset-registry-system","dir":"","previous_headings":"Key Functions & Architecture","what":"Dataset Registry System","title":"Claude Code Configuration","text":"Registry file: inst/extdata/datasets.yaml Functions: load_dataset_registry(), get_dataset_info(), update_registry_entry()","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"development-workflow","dir":"","previous_headings":"Common Commands","what":"Development Workflow","title":"Claude Code Configuration","text":"","code":"# Load and test changes devtools::load_all()  # Update documentation devtools::document()  # Run tests devtools::test()  # Check package devtools::check()  # Update data (with targets) targets::tar_make()"},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"package-development","dir":"","previous_headings":"Common Commands","what":"Package Development","title":"Claude Code Configuration","text":"Build package: R CMD build . Check package: R CMD check ---cran *.tar.gz Install package: R CMD INSTALL . Test package: devtools::test()","code":""},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"documentation","dir":"","previous_headings":"Common Commands","what":"Documentation","title":"Claude Code Configuration","text":"Build documentation: devtools::document() Build vignettes: devtools::build_vignettes() Build pkgdown site: pkgdown::build_site()","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"running-the-pipeline-locally","dir":"","previous_headings":"Common Commands > Data Pipeline Operations","what":"Running the Pipeline Locally","title":"Claude Code Configuration","text":"","code":"# Load targets library library(targets)  # View all targets tar_manifest()  # Check which targets are outdated tar_outdated()  # Run entire pipeline tar_make()  # Run specific targets (e.g., just ABECIP) tar_make(names = c(\"abecip_data\", \"abecip_cache\", \"abecip_validation\"))  # Visualize pipeline tar_visnetwork()"},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"automated-updates-github-actions","dir":"","previous_headings":"Common Commands > Data Pipeline Operations","what":"Automated Updates (GitHub Actions)","title":"Claude Code Configuration","text":"Weekly updates: Runs every Monday 10 UTC Manual trigger: Go Actions → “Weekly Data Updates” → “Run workflow” weekly: BCB, FGV, ABECIP, ABRAINC, SECOVI, RPPI (8 datasets) monthly: BIS, CBIC, Property Records (3 datasets) : datasets","code":""},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"pipeline-architecture","dir":"","previous_headings":"Common Commands > Data Pipeline Operations","what":"Pipeline Architecture","title":"Claude Code Configuration","text":"pipeline uses modern get_dataset() interface three targets per dataset: 1. {dataset}_data: Fetches fresh data using get_dataset(source=\"fresh\") 2. {dataset}_cache: Saves inst/cached_data/ directory 3. {dataset}_validation: Validates data quality Weekly Datasets (7-day update cycle): - bcb_series, bcb_realestate, fgv_ibre - abecip, abrainc, secovi - rppi_sale, rppi_rent Monthly Datasets (30-day update cycle): - bis_rppi, cbic, property_records Manual : - nre_ire (never auto-updates)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"code-quality","dir":"","previous_headings":"Common Commands","what":"Code Quality","title":"Claude Code Configuration","text":"Look claude/coding_guidelines.md detailed coding standards Lint code: lintr::lint_package() Style code: styler::style_pkg() Final check: devtools::check(cran = TRUE)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"development-standards","dir":"","previous_headings":"","what":"Development Standards","title":"Claude Code Configuration","text":"Always refer claude/coding_guidelines.md detailed instructions","code":""},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"document-changes","dir":"","previous_headings":"Development Standards","what":"Document changes","title":"Claude Code Configuration","text":"Update NEWS.md release Commit GitHub descriptive messages","code":""},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"code-style","dir":"","previous_headings":"Development Standards","what":"Code Style","title":"Claude Code Configuration","text":"Follow tidyverse style guide. Use explicit package calls (dplyr::filter()) functions. Document exported functions roxygen2. Prefer readability brevity. Use meaningful variable names.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"error-handling-pattern","dir":"","previous_headings":"Development Standards","what":"Error Handling Pattern","title":"Claude Code Configuration","text":"","code":"# Graceful degradation with fallbacks get_dataset <- function(name, source = \"auto\") {   tryCatch({     load_from_cache(name)  # Try primary method   }, error = function(e) {     tryCatch({       download_from_github(name)  # Try secondary method     }, error = function(e2) {       download_fresh(name)  # Try fresh download     })   }) }"},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"data-validation","dir":"","previous_headings":"Development Standards","what":"Data Validation","title":"Claude Code Configuration","text":"Check required columns data types Validate reasonable ranges Check duplicates Always validate data saving package","code":""},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"project-structure","dir":"","previous_headings":"","what":"Project Structure","title":"Claude Code Configuration","text":"","code":"realestatebr/ ├── .claude/                    # Claude Code configuration ├── _targets.R                  # Data processing pipeline (Phase 2) ├── data-raw/                   # Data processing scripts │   ├── functions.R             # Pipeline functions │   ├── validation.R            # Data validation rules │   └── [dataset].R             # Individual dataset scripts ├── R/                          # Package functions │   ├── list-datasets.R         # Dataset discovery │   ├── get-dataset.R           # Unified data access │   ├── get-*.R                 # Legacy functions │   ├── database.R              # DuckDB integration (Phase 3) │   ├── cache.R                 # Caching utilities │   ├── utils.R                 # Helper functions │   └── data-*.R                # Dataset documentation ├── inst/extdata/ │   ├── datasets.yaml           # Dataset registry │   ├── cache/                  # Cached datasets │   └── validation/             # Validation rules ├── tests/testthat/             # Unit tests ├── vignettes/                  # Package documentation ├── man/                        # Generated documentation └── docs/                       # pkgdown website"},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"adding-new-datasets","dir":"","previous_headings":"","what":"Adding New Datasets","title":"Claude Code Configuration","text":"Create processing script: data-raw/[dataset-name].R Add registry: Update inst/extdata/datasets.yaml Update functions: Add mapping get_dataset() switch statement Document: Create R/data-[dataset-name].R roxygen2 docs Test: Add tests tests/testthat/test-[dataset-name].R","code":""},{"path":"https://viniciusoike.github.io/realestatebr/CLAUDE.html","id":"important-notes","dir":"","previous_headings":"","what":"Important Notes","title":"Claude Code Configuration","text":"Data Quality: Always validate data saving package User Experience: Keep interface simple - complexity hidden Performance: Cache aggressively, download necessary Documentation: Every dataset needs proper documentation examples Attribution: Always provide proper citations data sources Web Scraping: Use appropriate user agents rate limiting","code":""},{"path":"https://viniciusoike.github.io/realestatebr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 realestatebr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/articles/getting-started.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started with realestatebr","text":"","code":"# Install from GitHub remotes::install_github(\"viniciusoike/realestatebr\")"},{"path":"https://viniciusoike.github.io/realestatebr/articles/getting-started.html","id":"quick-start","dir":"Articles","previous_headings":"","what":"Quick Start","title":"Getting Started with realestatebr","text":"realestatebr package provides unified interface accessing Brazilian real estate data multiple sources.","code":"library(realestatebr) library(dplyr) library(ggplot2)"},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/articles/getting-started.html","id":"discovering-datasets","dir":"Articles","previous_headings":"Basic Usage","what":"Discovering Datasets","title":"Getting Started with realestatebr","text":"Use list_datasets() see available data:","code":"# List all available datasets datasets <- list_datasets() head(datasets)  # Filter by source bcb_data <- list_datasets(source = \"BCB\")"},{"path":"https://viniciusoike.github.io/realestatebr/articles/getting-started.html","id":"getting-data","dir":"Articles","previous_headings":"Basic Usage","what":"Getting Data","title":"Getting Started with realestatebr","text":"data accessed get_dataset():","code":"# Get dataset (returns default table) abecip <- get_dataset(\"abecip\") head(abecip)  # Get specific table sbpe <- get_dataset(\"abecip\", table = \"sbpe\")  # See available tables for a dataset info <- get_dataset_info(\"abecip\") names(info$categories)"},{"path":"https://viniciusoike.github.io/realestatebr/articles/getting-started.html","id":"data-sources","dir":"Articles","previous_headings":"Basic Usage","what":"Data Sources","title":"Getting Started with realestatebr","text":"Control data comes source parameter:","code":"# Auto (default): Try GitHub cache first, fallback to fresh download data <- get_dataset(\"secovi\", source = \"auto\")  # GitHub cache only (faster, may be outdated) cached <- get_dataset(\"secovi\", source = \"github\")  # Fresh download (slower, always current) fresh <- get_dataset(\"secovi\", source = \"fresh\")"},{"path":"https://viniciusoike.github.io/realestatebr/articles/getting-started.html","id":"available-datasets","dir":"Articles","previous_headings":"","what":"Available Datasets","title":"Getting Started with realestatebr","text":"package currently provides access datasets: Credit & Finance: - abecip: Housing credit data (SBPE flows, units, home equity) - bcb_realestate: Real estate credit market data BCB Market Indicators: - abrainc: Primary market indicators (launches, sales, business conditions) - secovi: São Paulo market data (condos, rentals, launches, sales) Price Indices: - rppi: Brazilian property price indices (FipeZap, IVGR, IGMI, IVAR, IQA, IQAIW, Secovi-SP) - rppi_bis: International property price indices BIS (60+ countries) Economic Data: - bcb_series: Economic time series BCB - cbic: Cement consumption production data : - fgv_ibre: FGV economic indicators Use list_datasets() see full list details.","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/articles/getting-started.html","id":"example-1-housing-credit-analysis","dir":"Articles","previous_headings":"Example Workflows","what":"Example 1: Housing Credit Analysis","title":"Getting Started with realestatebr","text":"","code":"# Get SBPE housing credit data sbpe <- get_dataset(\"abecip\", table = \"sbpe\")  # Plot net flow over time ggplot(sbpe, aes(x = date, y = sbpe_netflow)) +   geom_line(color = \"steelblue\") +   labs(title = \"SBPE Net Flow\",        x = NULL,        y = \"R$ (millions)\") +   theme_minimal()"},{"path":"https://viniciusoike.github.io/realestatebr/articles/getting-started.html","id":"example-2-real-estate-credit-by-state","dir":"Articles","previous_headings":"Example Workflows","what":"Example 2: Real Estate Credit by State","title":"Getting Started with realestatebr","text":"","code":"# Get BCB real estate data bcb <- get_dataset(\"bcb_realestate\")  # Aggregate credit by date credit_data <- bcb |>   filter(category == \"credito\", type == \"estoque\") |>   summarise(total = sum(value, na.rm = TRUE), .by = date)  # Plot ggplot(credit_data, aes(x = date, y = total)) +   geom_line(color = \"steelblue\") +   scale_y_continuous(labels = scales::comma) +   labs(title = \"Total Real Estate Credit Stock\",        x = NULL,        y = \"R$ (billions)\") +   theme_minimal()"},{"path":"https://viniciusoike.github.io/realestatebr/articles/getting-started.html","id":"example-3-são-paulo-market-data","dir":"Articles","previous_headings":"Example Workflows","what":"Example 3: São Paulo Market Data","title":"Getting Started with realestatebr","text":"","code":"# Get Secovi São Paulo data secovi <- get_dataset(\"secovi\")  # See available categories info <- get_dataset_info(\"secovi\") names(info$categories)  # Get specific categories condo_fees <- get_dataset(\"secovi\", table = \"condo\") rental_data <- get_dataset(\"secovi\", table = \"rent\")"},{"path":"https://viniciusoike.github.io/realestatebr/articles/getting-started.html","id":"working-with-multi-table-datasets","dir":"Articles","previous_headings":"","what":"Working with Multi-Table Datasets","title":"Getting Started with realestatebr","text":"datasets multiple tables (categories). Use get_dataset_info() explore:","code":"# Get dataset structure info <- get_dataset_info(\"cbic\")  # See available tables names(info$categories)  # Access specific tables cement_monthly <- get_dataset(\"cbic\", table = \"cement_monthly_consumption\") cement_prices <- get_dataset(\"cbic\", table = \"cement_cub_prices\")"},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/articles/getting-started.html","id":"verbosity","dir":"Articles","previous_headings":"Controlling Output","what":"Verbosity","title":"Getting Started with realestatebr","text":"","code":"# Show progress messages (default) data <- get_dataset(\"abecip\", quiet = FALSE)  # Suppress messages data <- get_dataset(\"abecip\", quiet = TRUE)"},{"path":"https://viniciusoike.github.io/realestatebr/articles/getting-started.html","id":"error-handling","dir":"Articles","previous_headings":"Controlling Output","what":"Error Handling","title":"Getting Started with realestatebr","text":"package provides informative error messages:","code":"# Invalid dataset name get_dataset(\"invalid_name\") #> Error: Dataset 'invalid_name' not found #> ℹ Available datasets: abecip, abrainc, bcb_realestate, ... #> ℹ Use list_datasets() to see all available datasets  # Invalid table get_dataset(\"abecip\", table = \"wrong_table\") #> Error: Table 'wrong_table' not found for dataset 'abecip' #> ℹ Available tables: sbpe, units, cgi"},{"path":"https://viniciusoike.github.io/realestatebr/articles/getting-started.html","id":"migration-from-v0-3-x","dir":"Articles","previous_headings":"","what":"Migration from v0.3.x","title":"Getting Started with realestatebr","text":"Breaking Change v0.4.0: Individual get_*() functions removed. See NEWS.md complete migration details.","code":"# OLD (v0.3.x) - No longer works # abecip_old <- get_abecip_indicators(table = \"sbpe\")  # NEW (v0.4.0) - Use get_dataset() abecip_new <- get_dataset(\"abecip\", table = \"sbpe\")"},{"path":"https://viniciusoike.github.io/realestatebr/articles/getting-started.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next Steps","title":"Getting Started with realestatebr","text":"See vignette(\"working--rppi\") detailed property price index guide Use ?get_dataset full documentation Visit package website examples","code":""},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Working with Property Price Indices","text":"Brazil several Residential Property Price Indices (RPPI) different sources, unique methodologies coverage. vignette shows access analyze indices using realestatebr package.","code":"library(realestatebr) library(dplyr) library(ggplot2)  # Helper function for consistent plot styling theme_series <- function() {   theme_minimal() +     theme(       panel.grid.minor = element_blank(),       legend.position = \"bottom\",       palette.colour.discrete = c(\"#27708CFF\", \"#85A693FF\", \"#A6511FFF\", \"#BFA575FF\", \"#B4D9CEFF\")     ) }"},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"individual-indices","dir":"Articles","previous_headings":"Available RPPI Datasets","what":"Individual Indices","title":"Working with Property Price Indices","text":"Indexes different sources can accessed individually using ‘table’ argument get_dataset() function.","code":"# FipeZap Index (most comprehensive - 20 cities) fipezap <- get_dataset(\"rppi\", \"fipezap\")  # IVGR - National sales index from BCB ivgr <- get_dataset(\"rppi\", \"ivgr\")  # IGMI - Hedonic sales index from FGV igmi <- get_dataset(\"rppi\", \"igmi\")  # IVAR - Rent index from FGV ivar <- get_dataset(\"rppi\", \"ivar\")  # IQA - QuintoAndar rent prices iqa <- get_dataset(\"rppi\", \"iqa\")  # Secovi-SP - São Paulo market index secovi_sp <- get_dataset(\"rppi\", \"secovi_sp\")"},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"stacked-indices","dir":"Articles","previous_headings":"Available RPPI Datasets","what":"Stacked Indices","title":"Working with Property Price Indices","text":"facilitate comparisons, sale rent indices available stacked format. especially useful comparing multiple indices across different cities regions.","code":"# All sale indices in one table sale_indices <- get_dataset(\"rppi\", \"sale\") unique(sale_indices$source) # Shows: IGMI-R, IVG-R, FipeZap, Secovi-SP  # All rent indices rent_indices <- get_dataset(\"rppi\", \"rent\") unique(rent_indices$source) # Shows: IVAR, IQA, Secovi-SP, FipeZap"},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"common-columns","dir":"Articles","previous_headings":"Understanding the Data Structure","what":"Common Columns","title":"Working with Property Price Indices","text":"RPPI datasets share columns: date: reference date (YMD format) name_muni: city region name index: index number (base varies source) chg: monthly percent change acum12m: 12-month accumulated change price_m2: median price per square meter (available)","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"quintoandar-iqa","dir":"Articles","previous_headings":"Understanding the Data Structure","what":"QuintoAndar (IQA)","title":"Working with Property Price Indices","text":"Unlike indices, IQA provides actual rent prices instead index. Creating base index prices straightforward. code shows create base 100 index municipality, using first available rent price base (.e. 2019/06 = 100). ’s important note IQA went significant change methodology mid-2022, may affect trend analysis.","code":"iqa <- get_dataset(\"rppi\", \"iqa\")  iqa <- iqa |>   mutate(     index = rent_price / first(rent_price) * 100,     .by = name_muni   )"},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"fipezap","dir":"Articles","previous_headings":"Understanding the Data Structure","what":"FipeZap","title":"Working with Property Price Indices","text":"FipeZap detailed RPPI, includes residential non-residential markets, rent sales indices, breakdowns number bedrooms. full level granularity, however, available cities. market: residential commercial. rent_sale: sale rent market. rooms: breakdown number bedrooms (1, 2, 3, 4+, total). variable: index, chg, acum12m, price_m2 (median listing price), yield (rental yield).","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"regional-comparison-with-igmi","dir":"Articles","previous_headings":"Examples","what":"Regional Comparison with IGMI","title":"Working with Property Price Indices","text":"IGMI-R index Abecip/FGV providesprice indices major Brazilian cities. code compares IGMI sale index across São Paulo, Rio de Janeiro, Belo Horizonte, Brasília. use cases, reliable (.e. best) RPPI available. index based actual transaction prices adjusted property characteristics using hedonic methods provides city-level coverage. primary limitation relatively short time series, covering 2014 present.","code":"# Get IGMI data igmi <- get_dataset(\"rppi\", \"igmi\")  # Major cities comparison cities_igmi <- igmi |>   filter(name_muni %in% c(\"São Paulo\", \"Rio De Janeiro\",                           \"Belo Horizonte\", \"Brasília\"))  # Plot with facets ggplot(cities_igmi, aes(x = date, y = index, color = name_muni)) +   geom_line(linewidth = 0.8) +   labs(title = \"IGMI Sale Index by City\",        x = NULL,        y = \"Index\") +   theme_series()"},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"ivg-r-the-official-sales-index","dir":"Articles","previous_headings":"Examples","what":"IVG-R: the ‘official’ sales index","title":"Working with Property Price Indices","text":"IVG-R national sales index published Central Bank Brazil (BACEN). based median prices actual transactions include hedonic adjustments. index offers long time series (2001-present) available national level. IVG-R often considered “official” RPPI Brazil widely used economists policymakers. based median prices (see MVG-R), final index applies 3-month moving average HP filter smooth volatility, making less volatile indices.","code":"ivgr <- get_dataset(\"rppi\", \"ivgr\")  # Plot national IVG-R index ggplot(ivgr, aes(x = date, y = index)) +   geom_line(color = \"#27708CFF\", linewidth = 0.8) +   labs(title = \"IVG-R National Sale Index\",        x = NULL,        y = \"Index (base varies by source)\") +   theme_series()"},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"fipezap-the-broad-sales-index","dir":"Articles","previous_headings":"Examples","what":"FipeZap: the broad sales index","title":"Working with Property Price Indices","text":"FipeZap comprehensive RPPI terms geographic coverage, indices 50 cities. However, based median listing prices rather actual transaction prices. index available 2008 present includes sales rental markets. Working dataset requires filtering specific cities market segments. example compares residential sales index across São Paulo, Rio de Janeiro, Belo Horizonte.","code":"# Get FipeZap data fz <- get_dataset(\"rppi\", \"fipezap\")  # Filter for major cities - residential sale index cities <- fz |>   filter(     # residential x commercial market     market == \"residential\",     # sale x rent market     rent_sale == \"sale\",     # all bedroom counts (1, 2, 3, 4+, total)     rooms == \"total\",     variable == \"index\",     name_muni %in% c(\"São Paulo\", \"Rio De Janeiro\", \"Belo Horizonte\")   )  # Plot ggplot(cities, aes(x = date, y = value, color = name_muni)) +   geom_line(linewidth = 0.8) +   labs(     title = \"FipeZap Sale Index - Major Cities\",     x = NULL,     y = \"Index\",     color = \"City\"   ) +   theme_series()"},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"comparing-national-sale-indices","dir":"Articles","previous_headings":"Examples","what":"Comparing National Sale Indices","title":"Working with Property Price Indices","text":"actually make indices comparable, need normalize common base. code normalizes indices 100 start 2018 compares growth time. total variation 2018 2024 also annotated plot. Alternatively, can compare 12-month growth rates index, directly comparable across sources. Note, however, overall trends may point different conclusions depending index used. reflects differences methodology coverage across indices.","code":"# Get stacked sale data sales <- get_dataset(\"rppi\", \"sale\")  # Filter for national indices national <- sales |>   filter(name_muni == \"Brazil\")  # Plot comparison ggplot(national, aes(x = date, y = index, color = source)) +   geom_line(linewidth = 0.8) +   facet_wrap(vars(source), scales = \"free\") +   labs(title = \"Brazil National RPPI - Sales\",        x = NULL,        y = \"Index (base varies by source)\",        color = \"Source\") +   theme_series() comp_indexes <- national |>   filter(date >= as.Date(\"2018-01-01\"), date <= as.Date(\"2024-12-31\")) |>   mutate(     index_2018 = index / first(index) * 100,     .by = source   )  total_variation <- comp_indexes |>   summarise(     total_variation = last(index_2018) - first(index_2018),     date = last(date),     index_2018 = last(index_2018),     .by = source   ) |>   mutate(label = glue::glue(\"{source}: {round(total_variation, 1)}%\"))  ggplot(comp_indexes, aes(x = date, y = index_2018, color = source)) +   geom_line(linewidth = 0.8) +   geom_hline(yintercept = 100) +   geom_label(     data = total_variation,     aes(x = date, y = index_2018, label = label),     hjust = 0,     nudge_x = 30,     show.legend = FALSE   ) +   scale_x_date(limits = c(as.Date(\"2018-01-01\"), as.Date(\"2025-08-01\"))) +   guides(color = guide_legend()) +   labs(     title = \"Brazil National RPPI - Sales\",     x = NULL,     y = \"Index (base varies by source)\",     color = \"Source\"   ) +   theme_series() ggplot(comp_indexes, aes(x = date, y = acum12m, color = source)) +   geom_line(linewidth = 0.8) +   geom_hline(yintercept = 0) +   scale_x_date(limits = c(as.Date(\"2018-01-01\"), as.Date(\"2025-08-01\"))) +   scale_y_continuous(labels = scales::label_percent(scale = 100)) +   guides(color = guide_legend()) +   labs(     title = \"Brazil National RPPI - Sales\",     x = NULL,     y = NULL,     color = \"Source\"   ) +   theme_series()"},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"ivar-the-repeat-rent-index","dir":"Articles","previous_headings":"Examples","what":"IVAR: the repeat-rent index","title":"Working with Property Price Indices","text":"IVAR rental index published FGV, based unique “repeat-rent” methodology. covers major Brazilian cities available 2019 present. index based actual rental contract prices, making reliable measure rental market trends. IVAR “raw” index, meaning apply smoothing techniques like moving averages HP filter. result, may appear volatile indices. Applying filter can help visualize underlying trends. code applies 6-month moving average national IVAR index.","code":"ivar <- get_dataset(\"rppi\", \"ivar\")  ivar_cities <- ivar |>   filter(name_muni != \"Brazil\")  # Major cities comparison ggplot(ivar_cities, aes(x = date, y = index, color = name_muni)) +   geom_line(linewidth = 0.8) +   labs(title = \"IVAR Rent Index by City\",        x = NULL,        y = \"Index (base varies by source)\") +   theme_series() # National IVAR index ivar_national <- ivar |>   filter(name_muni == \"Brazil\") |>   mutate(ma_index = zoo::rollmean(index, 6, fill = NA, align = \"right\"))  ggplot(ivar_national, aes(x = date)) +   geom_line(aes(y = index), color = \"#A6511FFF\", linewidth = 0.5, alpha = 0.6) +   geom_line(aes(y = ma_index), color = \"#27708CFF\", linewidth = 0.8) +   labs(title = \"IVAR National Rent Index (raw vs 6-month MA)\",        x = NULL,        y = \"Index (base varies by source)\") +   theme_series()"},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"fipezap-the-broad-rental-index","dir":"Articles","previous_headings":"Examples","what":"FipeZap: the broad rental index","title":"Working with Property Price Indices","text":", FipeZap offers comprehensive geographic coverage. However, based median listing rent prices rather actual contract prices.","code":"# Get FipeZap data fz <- get_dataset(\"rppi\", \"fipezap\")  # Filter for major cities - residential rent index  start_date <- as.Date(\"2021-01-01\")  # cities_rent <- fz |>   filter(     market == \"residential\",     rooms == \"total\",     variable == \"acum12m\",     rent_sale == \"rent\",     date >= start_date,     !is.na(value)   ) # cities <- cities_rent |>   filter(date == start_date) |>   pull(name_muni)  cities_rent <- cities_rent |>   filter(name_muni %in% cities)   # Plot all cities ggplot(cities_rent, aes(x = date, y = value)) +   geom_line(linewidth = 0.8, color = \"#27708CFF\") +   facet_wrap(vars(name_muni)) +   labs(     title = \"FipeZap Rent Index - Major Cities\",     x = NULL,     y = \"Index\"   ) +   theme_series()"},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"iqa-quintoandar-rent-prices","dir":"Articles","previous_headings":"Examples","what":"IQA: QuintoAndar Rent Prices","title":"Working with Property Price Indices","text":"QuintoAndar online brokerage platform provides rental price data major cities Brazil. Initially, IQA simple median price index based rental contract prices. However, mid-2023, QuintoAndar adopted hedonic pricing model incorporates listing contract prices. Together methodological change, index rebranded Índice QuintoAndar ImovelWeb (IQAIW).","code":"iqa <- get_dataset(\"rppi\", \"iqa\")  iqa"},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"fipezap-by-city","dir":"Articles","previous_headings":"Examples","what":"FipeZap by City","title":"Working with Property Price Indices","text":"","code":"cities_count <- fz |>   filter(     market == \"residential\",     rooms == \"total\",     name_muni != \"Índice Fipezap\",     variable == \"index\",     !is.na(value)   ) |>   mutate(year = lubridate::year(date)) |>   count(year, name_muni, rent_sale) |>   count(year, rent_sale)  ggplot(cities_count, aes(x = year, y = n, fill = rent_sale)) +   geom_col() +   geom_hline(yintercept = 0) +   geom_text(aes(label = n), vjust = -0.5) +   facet_wrap(vars(rent_sale)) +   labs(     title = \"FipeZap Coverage Over Time\",     x = \"Year\",     y = \"Number of Cities\",     fill = \"Market\"   ) +   theme_series() # Get FipeZap data fz <- get_dataset(\"rppi\", \"fipezap\")  # Filter for major cities - residential sale index cities <- fz |>   filter(     market == \"residential\",     rooms == \"total\",     variable == \"index\",     rent_sale == \"sale\",     name_muni %in% c(\"São Paulo\", \"Rio De Janeiro\", \"Belo Horizonte\")   )  # Plot ggplot(cities, aes(x = date, y = value, color = name_muni)) +   geom_line(linewidth = 0.8) +   labs(title = \"FipeZap Sale Index - Major Cities\",        x = NULL,        y = \"Index\",        color = \"City\") +   theme_series()"},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"rent-vs-sale---são-paulo","dir":"Articles","previous_headings":"Examples","what":"Rent vs Sale - São Paulo","title":"Working with Property Price Indices","text":"","code":"# Filter for São Paulo - both rent and sale cities <- fz |>   filter(     name_muni %in% c(\"São Paulo\", \"Rio De Janeiro\", \"Belo Horizonte\"),     market == \"residential\",     rooms == \"total\",     variable == \"index\",     date >= as.Date(\"2019-01-01\")   ) |>   select(date, name_muni, rent_sale, value)  base_index <- cities |>   filter(between(date, as.Date(\"2019-01-01\"), as.Date(\"2019-12-31\"))) |>   summarise(base_index = mean(value), .by = c(name_muni, rent_sale))  cities <- cities |>   left_join(base_index, join_by(name_muni, rent_sale)) |>   mutate(new_index = 100 * value / base_index) |>   select(-base_index)  # Plot comparison ggplot(cities, aes(x = date, y = new_index, color = rent_sale)) +   geom_line() +   geom_hline(yintercept = 100) +   facet_wrap(vars(name_muni)) +   labs(     title = \"Post-pandemic Rent vs Sale Divide\",     subtitle = \"FipeZap residential index\",     x = NULL,     y = \"Index (100 = 2019 average)\",     color = \"Market\"   ) +   theme_series()"},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"international-comparison","dir":"Articles","previous_headings":"Examples","what":"International Comparison","title":"Working with Property Price Indices","text":"package includes international RPPI data Bank International Settlements (BIS):","code":"# Get BIS international RPPI bis <- get_dataset(\"rppi_bis\")  # Filter for select countries countries <- bis |>   filter(     reference_area %in% c(\"Brazil\", \"United States\", \"Japan\", \"Germany\"),     is_nominal == FALSE,     unit == \"Index, 2010 = 100\",     date >= as.Date(\"2000-01-01\")   )  # Plot comparison ggplot(countries, aes(x = date, y = value, color = reference_area)) +   geom_line(linewidth = 0.8) +   geom_hline(yintercept = 100) +   labs(title = \"Residential Property Prices - International\",        subtitle = \"Nominal indices, 2010 = 100\",        x = NULL,        y = \"Index (2010 = 100)\",        color = \"Country\") +   theme_series()"},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"coverage","dir":"Articles","previous_headings":"Examples > Key Differences Between Indices","what":"Coverage","title":"Working with Property Price Indices","text":"FipeZap: 20 cities, comprehensive geographic coverage IVGR: National IGMI: Major cities hedonic adjustment IVAR: Major cities IQA: 2 cities (São Paulo, Rio de Janeiro)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"methodology","dir":"Articles","previous_headings":"Examples > Key Differences Between Indices","what":"Methodology","title":"Working with Property Price Indices","text":"IVGR: Median prices actual transactions. IGMI: Hedonic pricing model (controls property characteristics). IVAR: Repeat-sales methodology. FipeZap: Median prices listings. IQA (old): Median prices rental contract prices. IQA (new): Hedonic pricing model listing contract prices.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"frequency","dir":"Articles","previous_headings":"Examples > Key Differences Between Indices","what":"Frequency","title":"Working with Property Price Indices","text":"indices monthly, historical coverage varies: - IVGR: 2001-present - IGMI: 2014-present - FipeZap: 2008-present - IVAR: 2002-present - IQA: 2019-present - Secovi-SP: 2008-present","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"use-stacked-data-for-easy-comparisons","dir":"Articles","previous_headings":"Examples > Analysis Tips","what":"1. Use Stacked Data for Easy Comparisons","title":"Working with Property Price Indices","text":"Stacked data makes easier compare multiple indices:","code":"# Get all sale indices in one table all_sale <- get_dataset(\"rppi\", table = \"sale\")  # Compare across sources all_sale |>   filter(name_muni == \"São Paulo\") |>   ggplot(aes(x = date, y = acum12m, color = source)) +   geom_line() +   labs(title = \"São Paulo Sale Indices Comparison\")"},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"normalize-indices-when-comparing-levels","dir":"Articles","previous_headings":"Examples > Analysis Tips","what":"2. Normalize Indices When Comparing Levels","title":"Working with Property Price Indices","text":"Since index different base period, normalize direct comparison:","code":"sales <- get_dataset(\"rppi\", table = \"sale\")  sales_normalized <- sales |>   mutate(index_normalized = 100 * index / first(index), .by = source)"},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"compare-growth-rates-not-levels","dir":"Articles","previous_headings":"Examples > Analysis Tips","what":"3. Compare Growth Rates, Not Levels","title":"Working with Property Price Indices","text":"Growth rates meaningful absolute index levels:","code":"# 12-month growth comparison sales |>   ggplot(aes(x = date, y = acum12m, color = source)) +   geom_line() +   labs(y = \"12-month change (%)\")"},{"path":"https://viniciusoike.github.io/realestatebr/articles/working-with-rppi.html","id":"next-steps","dir":"Articles","previous_headings":"Examples","what":"Next Steps","title":"Working with Property Price Indices","text":"See vignette(\"getting-started\") package basics See ?get_dataset available tables Explore city-level data FipeZap Compare methodologies across indices Analyze rent vs sale dynamics","code":""},{"path":"https://viniciusoike.github.io/realestatebr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vinicius Oike Reginatto. Maintainer.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Reginatto VO (2025). realestatebr: Import Brazilian Real Estate Data R. R package version 0.5.1, https://viniciusoike.github.io/realestatebr/.","code":"@Manual{,   title = {realestatebr: Import Brazilian Real Estate Data into R},   author = {Vinicius Oike Reginatto},   year = {2025},   note = {R package version 0.5.1},   url = {https://viniciusoike.github.io/realestatebr/}, }"},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"realestatebr-","dir":"","previous_headings":"","what":"Import Brazilian Real Estate Data into R","title":"Import Brazilian Real Estate Data into R","text":"realestatebr comprehensive R package accessing Brazilian real estate market data. Get property price indices, housing credit indicators, construction materials data, primary market statistics, economic time series—unified, consistent interface.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"why-realestatebr","dir":"","previous_headings":"","what":"Why realestatebr?","title":"Import Brazilian Real Estate Data into R","text":"Brazilian real estate data scattered across multiple sources, different formats, update schedules, access methods. realestatebr solves : Unified Access: Single get_dataset() function 10+ data sources Automatic Fallback: Smart caching GitHub → fresh download fallback Clean Data: Standardized column names consistent date formats --Date: Regular updates via GitHub Actions workflow Well Documented: Comprehensive vignettes examples every dataset","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"id_-unified-interface","dir":"","previous_headings":"Key Features (v0.4.0)","what":"🎯 Unified Interface","title":"Import Brazilian Real Estate Data into R","text":"datasets accessible single, consistent API:","code":"library(realestatebr)  # Discover what's available datasets <- list_datasets()  # Get any dataset abecip <- get_dataset(\"abecip\") rppi <- get_dataset(\"rppi\", table = \"fipezap\")"},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"id_-10-data-sources","dir":"","previous_headings":"Key Features (v0.4.0)","what":"📊 10+ Data Sources","title":"Import Brazilian Real Estate Data into R","text":"Access data Brazil’s authoritative sources:","code":""},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"id_-smart-data-access","dir":"","previous_headings":"Key Features (v0.4.0)","what":"🚀 Smart Data Access","title":"Import Brazilian Real Estate Data into R","text":"Multiple data sources automatic fallback:","code":"# Auto: Try cache first, fallback to fresh download data <- get_dataset(\"bcb_realestate\", source = \"auto\")  # GitHub: Fast cached data from GitHub data <- get_dataset(\"bcb_realestate\", source = \"github\")  # Fresh: Always download latest from source data <- get_dataset(\"bcb_realestate\", source = \"fresh\")"},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"id_-easy-discovery","dir":"","previous_headings":"Key Features (v0.4.0)","what":"🔍 Easy Discovery","title":"Import Brazilian Real Estate Data into R","text":"Built-tools explore available data:","code":"# See all datasets list_datasets()  # Filter by source list_datasets(source = \"BCB\")  # Get detailed info about a dataset info <- get_dataset_info(\"rppi\") names(info$categories)  # See available tables"},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Import Brazilian Real Estate Data into R","text":"Install development version GitHub:","code":"# install.packages(\"remotes\") remotes::install_github(\"viniciusoike/realestatebr\")"},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"getting-housing-credit-data","dir":"","previous_headings":"Quick Start","what":"Getting Housing Credit Data","title":"Import Brazilian Real Estate Data into R","text":"","code":"library(realestatebr) library(dplyr) library(ggplot2)  # Get SBPE housing credit flows sbpe <- get_dataset(\"abecip\", table = \"sbpe\")  # Visualize net flow over time ggplot(sbpe, aes(x = date, y = netflow)) +   geom_line(color = \"steelblue\", linewidth = 1) +   labs(     title = \"SBPE Housing Credit Net Flow\",     subtitle = \"Sistema Brasileiro de Poupança e Empréstimo\",     x = NULL,     y = \"R$ (millions)\"   ) +   theme_minimal()"},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"analyzing-property-prices","dir":"","previous_headings":"Quick Start","what":"Analyzing Property Prices","title":"Import Brazilian Real Estate Data into R","text":"","code":"# Get FipeZap property price index fipezap <- get_dataset(\"rppi\", table = \"fipezap\")  # Compare rent vs sale YoY changes in São Paulo sp_data <- fipezap |>   filter(     name_muni == \"São Paulo\",     market == \"residential\",     rooms == \"total\",     variable == \"acum12m\",     date >= as.Date(\"2019-01-01\")   )  ggplot(sp_data, aes(x = date, y = value, color = rent_sale)) +   geom_line(linewidth = 1) +   geom_hline(yintercept = 0) +   scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\") +   labs(     title = \"São Paulo Property Prices - Year-over-Year Change\",     subtitle = \"Residential market - FipeZap Index\",     x = NULL,     y = \"YoY change (%)\",     color = \"Market\"   ) +   theme_minimal() +   theme(legend.position = \"bottom\")"},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"international-comparison","dir":"","previous_headings":"Quick Start","what":"International Comparison","title":"Import Brazilian Real Estate Data into R","text":"","code":"# Get BIS international property price indices bis <- get_dataset(\"rppi_bis\")  # Compare Brazil with other countries countries <- bis |>   filter(     reference_area %in% c(\"Brazil\", \"United States\", \"Japan\"),     is_nominal == FALSE,     unit == \"Index, 2010 = 100\",     date >= as.Date(\"2010-01-01\")   )  ggplot(countries, aes(x = date, y = value, color = reference_area)) +   geom_line(linewidth = 1) +   geom_hline(yintercept = 100) +   labs(     title = \"Real Residential Property Prices - International\",     subtitle = \"Deflated by CPI, 2010 = 100\",     x = NULL,     y = \"Index (2010 = 100)\",     color = \"Country\"   ) +   theme_minimal() +   theme(legend.position = \"bottom\")"},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"credit--finance","dir":"","previous_headings":"Available Datasets","what":"Credit & Finance","title":"Import Brazilian Real Estate Data into R","text":"SBPE monetary flows (1982-present) Financed units (2002-present) Home equity loans (2017-present) Credit accounting applications Market indices State-level breakdowns","code":""},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"property-price-indices","dir":"","previous_headings":"Available Datasets","what":"Property Price Indices","title":"Import Brazilian Real Estate Data into R","text":"FipeZap: 20 cities, sale & rent (2011-present) IVGR: National sales index (2001-present) IGMI: Hedonic sales index (2010-present) IVAR: National rent index (2008-present) IQA: QuintoAndar rent prices (2020-present) Secovi-SP: São Paulo market (2009-present) 60+ countries Quarterly monthly frequencies Nominal real indices","code":""},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"market-indicators","dir":"","previous_headings":"Available Datasets","what":"Market Indicators","title":"Import Brazilian Real Estate Data into R","text":"Launches, sales, deliveries Business radar (0-10 index) Leading indicators Condominium fees Rental market New launches Sales data","code":""},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"construction--economic","dir":"","previous_headings":"Available Datasets","what":"Construction & Economic","title":"Import Brazilian Real Estate Data into R","text":"Cement consumption state Production exports CUB prices Price indices Credit indicators Economic activity","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"vignettes","dir":"","previous_headings":"Learn More","what":"Vignettes","title":"Import Brazilian Real Estate Data into R","text":"Comprehensive guides getting started specialized topics: Getting Started - Package basics, main functions, workflows Working Property Price Indices - Detailed RPPI guide examples","code":""},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"documentation","dir":"","previous_headings":"Learn More","what":"Documentation","title":"Import Brazilian Real Estate Data into R","text":"Function Reference - Complete documentation functions News - Version history changelog","code":""},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"data-sources--citation","dir":"","previous_headings":"","what":"Data Sources & Citation","title":"Import Brazilian Real Estate Data into R","text":"package aggregates data multiple authoritative sources: ABECIP - Associação Brasileira das Entidades de Crédito Imobiliário e Poupança ABRAINC/FIPE - Associação Brasileira de Incorporadoras / Fundação Instituto de Pesquisas Econômicas Banco Central Brasil (BCB) - Brazilian Central Bank BIS - Bank International Settlements CBIC - Câmara Brasileira da Indústria da Construção FGV IBRE - Fundação Getúlio Vargas / Instituto Brasileiro de Economia FipeZap - FIPE / ZAP Imóveis Secovi-SP - Sindicato da Habitação de São Paulo using package research publications, please cite package original data sources. cite package:","code":"citation(\"realestatebr\")"},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"whats-new-in-v040","dir":"","previous_headings":"","what":"What’s New in v0.4.0?","title":"Import Brazilian Real Estate Data into R","text":"Version 0.4.0 introduces major breaking changes unified interface: 🔧 Single Function API - data accessed via get_dataset() 📊 Hierarchical Access - Simple table parameter multi-table datasets 🚀 Smart Fallback - Automatic GitHub cache → fresh download ✨ Better Errors - Informative CLI-based error messages 🔄 Internal Architecture - 12 new fetch_*() functions consistent design Breaking Change: Individual get_*() functions removed. Use get_dataset(\"dataset_name\") instead. See full migration guide details.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Import Brazilian Real Estate Data into R","text":"Contributions welcome! Please feel free : Report bugs request features via GitHub Issues Submit pull requests bug fixes new features Improve documentation","code":""},{"path":"https://viniciusoike.github.io/realestatebr/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Import Brazilian Real Estate Data into R","text":"MIT License - see LICENSE file details. Maintainer: Vinicius Oike Reginatto (viniciusoike@gmail.com) Website: https://viniciusoike.github.io/realestatebr/ Repository: https://github.com/viniciusoike/realestatebr","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/apply_translations.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Translations to Dataset — apply_translations","title":"Apply Translations to Dataset — apply_translations","text":"Apply standard Portuguese English translations column names values","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/apply_translations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Translations to Dataset — apply_translations","text":"","code":"apply_translations(data, name, dataset_info)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/apply_translations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Translations to Dataset — apply_translations","text":"data Dataset translate name Dataset name dataset_info Dataset metadata","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/apply_translations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Translations to Dataset — apply_translations","text":"Translated dataset","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/b3_real_estate.html","id":null,"dir":"Reference","previous_headings":"","what":"Real Estate Players listed on B3 — b3_real_estate","title":"Real Estate Players listed on B3 — b3_real_estate","text":"List mian Brazilian real estate players listed B3.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/b3_real_estate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Real Estate Players listed on B3 — b3_real_estate","text":"","code":"b3_real_estate"},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/reference/b3_real_estate.html","id":"b-real-estate","dir":"Reference","previous_headings":"","what":"b3_real_estate","title":"Real Estate Players listed on B3 — b3_real_estate","text":"tibble 38 rows 3 columns: symbol Stock ticker. name Full company name. name_short shorter version company name.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/b3_real_estate.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Real Estate Players listed on B3 — b3_real_estate","text":"https://www.b3.com.br/pt_br/produtos-e-servicos/negociacao/renda-variavel/empresas-listadas.htm","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/bcb_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Brazilian Central Bank Series Metadata — bcb_metadata","title":"Brazilian Central Bank Series Metadata — bcb_metadata","text":"table metadata BCB economic series. Use get_dataset(\"bcb_series\").","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/bcb_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Brazilian Central Bank Series Metadata — bcb_metadata","text":"","code":"bcb_metadata"},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/reference/bcb_metadata.html","id":"bcb-metadata","dir":"Reference","previous_headings":"","what":"bcb_metadata","title":"Brazilian Central Bank Series Metadata — bcb_metadata","text":"data frame 140 rows 10 columns: code_bcb Numeric code identifying series. bcb_category Category series. name_simplified Simplified name series. name_pt Full name series Portuguese. name Full name series English. unit Unit series. frequency Frequency series. first_value Date first available observation. last_value Date last available observation. source Source series.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/bcb_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Brazilian Central Bank Series Metadata — bcb_metadata","text":"https://www3.bcb.gov.br/sgspub/localizarseries/localizarSeries.?method=prepararTelaLocalizarSeries","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/check_cache_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Cache Status — check_cache_status","title":"Check Cache Status — check_cache_status","text":"Check availability status cached datasets","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/check_cache_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Cache Status — check_cache_status","text":"","code":"check_cache_status(cache_dir = \"cached_data\")"},{"path":"https://viniciusoike.github.io/realestatebr/reference/check_cache_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Cache Status — check_cache_status","text":"cache_dir Character. Cache directory path","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/check_cache_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Cache Status — check_cache_status","text":"Tibble cache status information","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_annual.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean CBIC cement annual consumption data (tabela_07.A.01) — clean_cbic_cement_annual","title":"Clean CBIC cement annual consumption data (tabela_07.A.01) — clean_cbic_cement_annual","text":"Clean CBIC cement annual consumption data (tabela_07..01)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_annual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean CBIC cement annual consumption data (tabela_07.A.01) — clean_cbic_cement_annual","text":"","code":"clean_cbic_cement_annual(file_path, sheet = 1)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_annual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean CBIC cement annual consumption data (tabela_07.A.01) — clean_cbic_cement_annual","text":"file_path Character. Path Excel file sheet Character numeric. Sheet read","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_annual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean CBIC cement annual consumption data (tabela_07.A.01) — clean_cbic_cement_annual","text":"tibble columns: year Numeric. Year region Character. Region name value Numeric. Annual consumption value variable Character. Type metric (consumption growth)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_cub.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean CBIC cement CUB price data (tabela_07.A.05) — clean_cbic_cement_cub","title":"Clean CBIC cement CUB price data (tabela_07.A.05) — clean_cbic_cement_cub","text":"WARNING: function works CUB price tables (tabela_07..05). Year month first two columns, states remaining columns.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_cub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean CBIC cement CUB price data (tabela_07.A.05) — clean_cbic_cement_cub","text":"","code":"clean_cbic_cement_cub(file_path)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_cub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean CBIC cement CUB price data (tabela_07.A.05) — clean_cbic_cement_cub","text":"file_path Character. Path Excel file","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_cub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean CBIC cement CUB price data (tabela_07.A.05) — clean_cbic_cement_cub","text":"tibble columns: date Date. Monthly date year Numeric. Year state Character. State abbreviation value Numeric. CUB cement price (R$/kg)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_monthly.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean CBIC cement monthly consumption data (tabela_07.A.03) — clean_cbic_cement_monthly","title":"Clean CBIC cement monthly consumption data (tabela_07.A.03) — clean_cbic_cement_monthly","text":"WARNING: function works monthly consumption tables (tabela_07..03). CBIC data messy inconsistent. material type likely needs cleaning function. Always inspect raw data first applying cleaning.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_monthly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean CBIC cement monthly consumption data (tabela_07.A.03) — clean_cbic_cement_monthly","text":"","code":"clean_cbic_cement_monthly(dat, year, quiet = FALSE, warn_level = \"user\")"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_monthly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean CBIC cement monthly consumption data (tabela_07.A.03) — clean_cbic_cement_monthly","text":"dat data.frame. Raw data Excel sheet 'localidade' column year Numeric vector length 1. Year data","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_monthly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean CBIC cement monthly consumption data (tabela_07.A.03) — clean_cbic_cement_monthly","text":"tibble columns: date Date. Monthly date (first day month) year Numeric. Year code_state Character. IBGE state code name_state Character. State name value Numeric. Cement consumption value","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_monthly.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean CBIC cement monthly consumption data (tabela_07.A.03) — clean_cbic_cement_monthly","text":"Processes raw cement consumption data CBIC Excel files removing total rows/columns, pivoting long format, adding state codes.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_monthly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean CBIC cement monthly consumption data (tabela_07.A.03) — clean_cbic_cement_monthly","text":"","code":"if (FALSE) { # \\dontrun{ # Only works for monthly consumption tables! cleaned_data <- clean_cbic_cement_monthly(raw_data, 2023) } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_monthly_production.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean CBIC cement monthly production data (tabela_07.A.04) — clean_cbic_cement_monthly_production","title":"Clean CBIC cement monthly production data (tabela_07.A.04) — clean_cbic_cement_monthly_production","text":"WARNING: function works monthly production tables (tabela_07..04). Similar consumption uses \"...\" missing data.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_monthly_production.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean CBIC cement monthly production data (tabela_07.A.04) — clean_cbic_cement_monthly_production","text":"","code":"clean_cbic_cement_monthly_production(dat, year)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_monthly_production.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean CBIC cement monthly production data (tabela_07.A.04) — clean_cbic_cement_monthly_production","text":"dat data.frame. Raw data Excel sheet year Numeric. Year data","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_monthly_production.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean CBIC cement monthly production data (tabela_07.A.04) — clean_cbic_cement_monthly_production","text":"tibble columns: date Date. Monthly date year Numeric. Year code_state Character. IBGE state code name_state Character. State name value Numeric. Production value (NA missing)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_production.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean CBIC cement production/consumption/export data (tabela_07.A.02) — clean_cbic_cement_production","title":"Clean CBIC cement production/consumption/export data (tabela_07.A.02) — clean_cbic_cement_production","text":"WARNING: function works production tables (tabela_07..02). Simple year-based structure multiple metrics columns.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_production.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean CBIC cement production/consumption/export data (tabela_07.A.02) — clean_cbic_cement_production","text":"","code":"clean_cbic_cement_production(file_path)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_production.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean CBIC cement production/consumption/export data (tabela_07.A.02) — clean_cbic_cement_production","text":"file_path Character. Path Excel file","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_production.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean CBIC cement production/consumption/export data (tabela_07.A.02) — clean_cbic_cement_production","text":"tibble columns: year Numeric. Year variable Character. Metric name value Numeric. Value","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_sheets.html","id":null,"dir":"Reference","previous_headings":"","what":"Process CBIC cement Excel sheets specifically — clean_cbic_cement_sheets","title":"Process CBIC cement Excel sheets specifically — clean_cbic_cement_sheets","text":"Routes appropriate cleaning function based file type.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_sheets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process CBIC cement Excel sheets specifically — clean_cbic_cement_sheets","text":"","code":"clean_cbic_cement_sheets(   download_results,   skip_rows = 4,   quiet = FALSE,   warn_level = \"user\" )"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_sheets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process CBIC cement Excel sheets specifically — clean_cbic_cement_sheets","text":"download_results tibble. Output import_cbic_files() skip_rows Numeric vector length 1. Number rows skip reading Excel","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_sheets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process CBIC cement Excel sheets specifically — clean_cbic_cement_sheets","text":"list cleaned cement data frames, named file type","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_cement_sheets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process CBIC cement Excel sheets specifically — clean_cbic_cement_sheets","text":"","code":"if (FALSE) { # \\dontrun{ download_results <- import_cbic_files(cement_files) processed_data <- clean_cbic_cement_sheets(download_results) } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_pim.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean CBIC PIM industrial production data — clean_cbic_pim","title":"Clean CBIC PIM industrial production data — clean_cbic_pim","text":"Processes PIM (Pesquisa Industrial Mensal) industrial production index construction materials. data uses unique structure Excel serial dates January month abbreviations months.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_pim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean CBIC PIM industrial production data — clean_cbic_pim","text":"","code":"clean_cbic_pim(file_path, skip = 4)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_pim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean CBIC PIM industrial production data — clean_cbic_pim","text":"file_path Character. Path PIM Excel file skip Numeric. Number rows skip (default = 4)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_pim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean CBIC PIM industrial production data — clean_cbic_pim","text":"tibble columns: date Date. Monthly date year Numeric. Year month Character. Month name value Numeric. Production index (base: 2022 = 100)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_pim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean CBIC PIM industrial production data — clean_cbic_pim","text":"","code":"if (FALSE) { # \\dontrun{ pim_data <- clean_cbic_pim(\"path/to/pim_file.xlsx\") } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_pim_sheets.html","id":null,"dir":"Reference","previous_headings":"","what":"Process CBIC PIM Excel sheets — clean_cbic_pim_sheets","title":"Process CBIC PIM Excel sheets — clean_cbic_pim_sheets","text":"Wrapper function process PIM files. Currently handles current methodology file (file 3), files 1 2 historical data discontinued methodologies.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_pim_sheets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process CBIC PIM Excel sheets — clean_cbic_pim_sheets","text":"","code":"clean_cbic_pim_sheets(download_results, quiet = FALSE)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_pim_sheets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process CBIC PIM Excel sheets — clean_cbic_pim_sheets","text":"download_results tibble. Output import_cbic_files()","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_pim_sheets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process CBIC PIM Excel sheets — clean_cbic_pim_sheets","text":"list cleaned PIM data","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_pim_sheets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process CBIC PIM Excel sheets — clean_cbic_pim_sheets","text":"","code":"if (FALSE) { # \\dontrun{ download_results <- import_cbic_files(pim_files) pim_data <- clean_cbic_pim_sheets(download_results) } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_steel_prices.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean CBIC steel price data (file 1) — clean_cbic_steel_prices","title":"Clean CBIC steel price data (file 1) — clean_cbic_steel_prices","text":"WARNING: function works steel price tables. Steel data different structure cement data.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_steel_prices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean CBIC steel price data (file 1) — clean_cbic_steel_prices","text":"","code":"clean_cbic_steel_prices(file_path, skip_rows = 4)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_steel_prices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean CBIC steel price data (file 1) — clean_cbic_steel_prices","text":"file_path Character. Path steel prices Excel file skip_rows Numeric. Number rows skip reading Excel","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_steel_prices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean CBIC steel price data (file 1) — clean_cbic_steel_prices","text":"tibble columns: date Date. Monthly date year Numeric. Year code_state Character. IBGE state code name_state Character. State name avg_price Numeric. Average steel price","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_steel_prices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean CBIC steel price data (file 1) — clean_cbic_steel_prices","text":"","code":"if (FALSE) { # \\dontrun{ steel_files <- get_cbic_files(\"aco\") prices <- clean_cbic_steel_prices(steel_files$file_path[1]) } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_steel_production.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean CBIC steel production data (file 2) — clean_cbic_steel_production","title":"Clean CBIC steel production data (file 2) — clean_cbic_steel_production","text":"WARNING: function works steel production tables. handles complex multi-header Excel structure.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_steel_production.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean CBIC steel production data (file 2) — clean_cbic_steel_production","text":"","code":"clean_cbic_steel_production(file_path, skip_rows = 3)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_steel_production.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean CBIC steel production data (file 2) — clean_cbic_steel_production","text":"file_path Character. Path steel production Excel file skip_rows Numeric. Number rows skip headers","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_steel_production.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean CBIC steel production data (file 2) — clean_cbic_steel_production","text":"tibble columns: year Numeric. Year product Character. Steel product type variable Character. Variable measured value Numeric. Production value","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_steel_production.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean CBIC steel production data (file 2) — clean_cbic_steel_production","text":"","code":"if (FALSE) { # \\dontrun{ steel_files <- get_cbic_files(\"aco\") production <- clean_cbic_steel_production(steel_files$file_path[2]) } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_steel_sheets.html","id":null,"dir":"Reference","previous_headings":"","what":"Process CBIC steel Excel files — clean_cbic_steel_sheets","title":"Process CBIC steel Excel files — clean_cbic_steel_sheets","text":"Handles steel price production files appropriate cleaning.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_steel_sheets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process CBIC steel Excel files — clean_cbic_steel_sheets","text":"","code":"clean_cbic_steel_sheets(download_results, quiet = FALSE)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_steel_sheets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process CBIC steel Excel files — clean_cbic_steel_sheets","text":"download_results tibble. Output import_cbic_files()","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_steel_sheets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process CBIC steel Excel files — clean_cbic_steel_sheets","text":"list 'prices' 'production' data frames","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_steel_sheets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process CBIC steel Excel files — clean_cbic_steel_sheets","text":"","code":"if (FALSE) { # \\dontrun{ steel_files <- get_cbic_files(\"aco\") steel_data <- clean_cbic_steel_sheets(steel_files) } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to clean strings for CBIC column names — clean_cbic_string","title":"Helper function to clean strings for CBIC column names — clean_cbic_string","text":"Helper function clean strings CBIC column names","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to clean strings for CBIC column names — clean_cbic_string","text":"","code":"clean_cbic_string(x)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to clean strings for CBIC column names — clean_cbic_string","text":"x Character vector clean","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_cbic_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to clean strings for CBIC column names — clean_cbic_string","text":"Cleaned character vector","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_column_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Column Name — clean_column_name","title":"Clean Column Name — clean_column_name","text":"Clean standardize column names direct translations","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_column_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Column Name — clean_column_name","text":"","code":"clean_column_name(name)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_column_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Column Name — clean_column_name","text":"name Original column name","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clean_column_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Column Name — clean_column_name","text":"Cleaned column name","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clear_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear Cache — clear_cache","title":"Clear Cache — clear_cache","text":"Remove cached datasets (development utility)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clear_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear Cache — clear_cache","text":"","code":"clear_cache(dataset_names = NULL, cache_dir = \"cached_data\", confirm = TRUE)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/clear_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear Cache — clear_cache","text":"dataset_names Character vector. Specific datasets remove, NULL cache_dir Character. Cache directory path confirm Logical. Require confirmation (default: TRUE)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/clear_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear Cache — clear_cache","text":"Logical. TRUE successful","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/cli_debug.html","id":null,"dir":"Reference","previous_headings":"","what":"Debug-Level Messaging — cli_debug","title":"Debug-Level Messaging — cli_debug","text":"Displays informational messages debug mode enabled. function wrapper around cli::cli_inform() respects debug mode setting.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/cli_debug.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Debug-Level Messaging — cli_debug","text":"","code":"cli_debug(message, ...)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/cli_debug.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Debug-Level Messaging — cli_debug","text":"message Character string. message display. ... Additional arguments passed cli::cli_inform().","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/cli_debug.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Debug-Level Messaging — cli_debug","text":"function used detailed processing messages useful development debugging verbose end-users. Messages shown debug mode enabled via is_debug_mode().","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/reference/cli_debug.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Debug-Level Messaging — cli_debug","text":"","code":"if (FALSE) { # \\dontrun{ # This message only appears in debug mode cli_debug(\"Processing file: {filename}\")  # Enable debug mode to see the message options(realestatebr.debug = TRUE) cli_debug(\"Now you can see this message\") } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/cli_user.html","id":null,"dir":"Reference","previous_headings":"","what":"User-Level Messaging — cli_user","title":"User-Level Messaging — cli_user","text":"Displays concise informational messages end-users. function shows simplified, clean message unless user requested verbose output via quiet parameter.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/cli_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User-Level Messaging — cli_user","text":"","code":"cli_user(message, quiet = FALSE, ...)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/cli_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User-Level Messaging — cli_user","text":"message Character string. message display. quiet Logical. TRUE, suppresses message. ... Additional arguments passed cli::cli_inform().","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/cli_user.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"User-Level Messaging — cli_user","text":"function used essential status messages provide value end-users, final results major milestones. message shown unless explicitly suppressed quiet=TRUE.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/cli_user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"User-Level Messaging — cli_user","text":"","code":"if (FALSE) { # \\dontrun{ # Always shows unless quiet=TRUE cli_user(\"✓ Dataset loaded: 1,234 records\")  # Respects quiet parameter cli_user(\"Processing complete\", quiet = FALSE)  # Shows cli_user(\"Processing complete\", quiet = TRUE)   # Hidden } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/dim_city.html","id":null,"dir":"Reference","previous_headings":"","what":"Brazilian city identifier table — dim_city","title":"Brazilian city identifier table — dim_city","text":"table official IBGE identifiers Brazilian cities.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/dim_city.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Brazilian city identifier table — dim_city","text":"","code":"dim_city"},{"path":"https://viniciusoike.github.io/realestatebr/reference/dim_city.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Brazilian city identifier table — dim_city","text":"object class tbl_df (inherits tbl, data.frame) 5570 rows 8 columns.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/dim_city.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Brazilian city identifier table — dim_city","text":"<IBGE ...>","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/dim_city.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Brazilian city identifier table — dim_city","text":"tibble 5,570 rows 8 columns: code_muni 7-digit IBGE code identifying city. name_muni Name city. code_state 2-digit IBGE code identifying state. name_state Name state. code_region 1-digit IBGE code identifying region name_region Name region name_simplified Simplified version city name easier subsetting.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/dot-ENCODING_MAP.html","id":null,"dir":"Reference","previous_headings":"","what":"Character mappings for consistent encoding — .ENCODING_MAP","title":"Character mappings for consistent encoding — .ENCODING_MAP","text":"list contains Unicode escape sequences Portuguese characters commonly used Brazilian data sources. Using Unicode escapes ensures CRAN compliance maintaining correct character representation.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/dot-ENCODING_MAP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Character mappings for consistent encoding — .ENCODING_MAP","text":"","code":".ENCODING_MAP"},{"path":"https://viniciusoike.github.io/realestatebr/reference/dot-ENCODING_MAP.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Character mappings for consistent encoding — .ENCODING_MAP","text":"object class list length 13.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_abecip_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Abecip Excel File with Retry Logic — download_abecip_file","title":"Download Abecip Excel File with Retry Logic — download_abecip_file","text":"Internal helper function download Excel files Abecip website automatic retry failure.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_abecip_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Abecip Excel File with Retry Logic — download_abecip_file","text":"","code":"download_abecip_file(   url_page,   xpath,   file_prefix,   quiet = FALSE,   max_retries = 3L )"},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_abecip_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Abecip Excel File with Retry Logic — download_abecip_file","text":"url_page URL Abecip page containing download link xpath XPath locate download link file_prefix Prefix temporary file name quiet Logical controlling messages max_retries Maximum number retry attempts","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_abecip_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Abecip Excel File with Retry Logic — download_abecip_file","text":"Path downloaded temporary file","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_abecip_sbpe.html","id":null,"dir":"Reference","previous_headings":"","what":"Download SBPE Data from Abecip — download_abecip_sbpe","title":"Download SBPE Data from Abecip — download_abecip_sbpe","text":"Internal function download process SBPE (savings) data Abecip robust error handling retry logic.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_abecip_sbpe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download SBPE Data from Abecip — download_abecip_sbpe","text":"","code":"download_abecip_sbpe(quiet = FALSE, max_retries = 3L)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_abecip_sbpe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download SBPE Data from Abecip — download_abecip_sbpe","text":"quiet Logical controlling progress messages max_retries Maximum number retry attempts","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_abecip_sbpe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download SBPE Data from Abecip — download_abecip_sbpe","text":"tibble processed SBPE data","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_abecip_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Units Data from Abecip — download_abecip_units","title":"Download Units Data from Abecip — download_abecip_units","text":"Internal function download process financed units data Abecip robust error handling retry logic.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_abecip_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Units Data from Abecip — download_abecip_units","text":"","code":"download_abecip_units(quiet = FALSE, max_retries = 3L)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_abecip_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Units Data from Abecip — download_abecip_units","text":"quiet Logical controlling progress messages max_retries Maximum number retry attempts","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_abecip_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Units Data from Abecip — download_abecip_units","text":"tibble processed units data","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_abrainc_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Abrainc Excel File with Retry Logic — download_abrainc_excel","title":"Download Abrainc Excel File with Retry Logic — download_abrainc_excel","text":"Internal function download Abrainc-Fipe Excel file retry attempts proper error handling.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_abrainc_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Abrainc Excel File with Retry Logic — download_abrainc_excel","text":"","code":"download_abrainc_excel(max_retries, quiet)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_abrainc_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Abrainc Excel File with Retry Logic — download_abrainc_excel","text":"max_retries Maximum number retry attempts quiet Logical controlling messages","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_abrainc_excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Abrainc Excel File with Retry Logic — download_abrainc_excel","text":"List path (character NULL) attempt count","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_and_process_bcb_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Process BCB Real Estate Data with Retry Logic — download_and_process_bcb_data","title":"Download and Process BCB Real Estate Data with Retry Logic — download_and_process_bcb_data","text":"Internal function download process BCB real estate data retry logic proper error handling.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_and_process_bcb_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Process BCB Real Estate Data with Retry Logic — download_and_process_bcb_data","text":"","code":"download_and_process_bcb_data(quiet, max_retries)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_and_process_bcb_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Process BCB Real Estate Data with Retry Logic — download_and_process_bcb_data","text":"quiet Logical controlling messages max_retries Maximum number retry attempts","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_and_process_bcb_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and Process BCB Real Estate Data with Retry Logic — download_and_process_bcb_data","text":"Processed BCB real estate data tibble","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_bis_excel_robust.html","id":null,"dir":"Reference","previous_headings":"","what":"Download BIS Excel File with Robust Error Handling — download_bis_excel_robust","title":"Download BIS Excel File with Robust Error Handling — download_bis_excel_robust","text":"Internal function download BIS Excel files retry logic.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_bis_excel_robust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download BIS Excel File with Robust Error Handling — download_bis_excel_robust","text":"","code":"download_bis_excel_robust(url, filename, quiet, max_retries)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_bis_excel_robust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download BIS Excel File with Robust Error Handling — download_bis_excel_robust","text":"url URL download filename Filename temporary file quiet Logical controlling messages max_retries Maximum number retry attempts","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_bis_excel_robust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download BIS Excel File with Robust Error Handling — download_bis_excel_robust","text":"Path downloaded temporary Excel file","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_ri_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Excel File with Retry Logic for Registro de Imoveis — download_ri_excel","title":"Download Excel File with Retry Logic for Registro de Imoveis — download_ri_excel","text":"Internal helper function download Excel files retry attempts.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_ri_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Excel File with Retry Logic for Registro de Imoveis — download_ri_excel","text":"","code":"download_ri_excel(url, filename, quiet, max_retries)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_ri_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Excel File with Retry Logic for Registro de Imoveis — download_ri_excel","text":"url Download URL filename Base filename temp file quiet Logical controlling messages max_retries Maximum retry attempts","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/download_ri_excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Excel File with Retry Logic for Registro de Imoveis — download_ri_excel","text":"List path (character NULL) attempt count","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/encoding-utils.html","id":null,"dir":"Reference","previous_headings":"","what":"Character Encoding Utilities — encoding-utils","title":"Character Encoding Utilities — encoding-utils","text":"Internal utilities consistent handling Portuguese characters using Unicode escapes maintain CRAN compliance.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/explore_cbic_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore CBIC Excel file structure (for messy data investigation) — explore_cbic_structure","title":"Explore CBIC Excel file structure (for messy data investigation) — explore_cbic_structure","text":"Use function first working new CBIC materials. CBIC data inconsistent - always explore structure creating cleaning functions.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/explore_cbic_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore CBIC Excel file structure (for messy data investigation) — explore_cbic_structure","text":"","code":"explore_cbic_structure(file_path, sheet = 1)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/explore_cbic_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore CBIC Excel file structure (for messy data investigation) — explore_cbic_structure","text":"file_path Character. Path downloaded Excel file sheet Character. Sheet name number explore (default: first sheet)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/explore_cbic_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explore CBIC Excel file structure (for messy data investigation) — explore_cbic_structure","text":"Prints structure information returns raw data inspection","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/explore_cbic_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explore CBIC Excel file structure (for messy data investigation) — explore_cbic_structure","text":"","code":"if (FALSE) { # \\dontrun{ files <- get_cbic_files(\"aco\") explore_cbic_structure(files$file_path[1]) } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/extract_property_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Specific Table from Property Records Data — extract_property_table","title":"Extract Specific Table from Property Records Data — extract_property_table","text":"Internal helper function extract specific table cached property data","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/extract_property_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Specific Table from Property Records Data — extract_property_table","text":"","code":"extract_property_table(prop_data, table)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/extract_property_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Specific Table from Property Records Data — extract_property_table","text":"prop_data Property records data structure (cached format) table Table name extract","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/extract_property_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Specific Table from Property Records Data — extract_property_table","text":"Single tibble requested table","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abecip_indicators.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Credit Indicators from Abecip — get_abecip_indicators","title":"Get Credit Indicators from Abecip — get_abecip_indicators","text":"Get Credit Indicators Abecip","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abecip_indicators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Credit Indicators from Abecip — get_abecip_indicators","text":"","code":"get_abecip_indicators(   table = \"sbpe\",   cached = FALSE,   quiet = FALSE,   max_retries = 3L )"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abecip_indicators.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get Credit Indicators from Abecip — get_abecip_indicators","text":"https://www.abecip.org.br","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abecip_indicators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Credit Indicators from Abecip — get_abecip_indicators","text":"table Character. One 'sbpe' (default), 'units', 'cgi'. cached Logical. TRUE, attempts load data package cache using unified dataset architecture. quiet Logical. TRUE, suppresses progress messages warnings. FALSE (default), provides detailed progress reporting. max_retries Integer. Maximum number retry attempts failed downloads. Defaults 3.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abecip_indicators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Credit Indicators from Abecip — get_abecip_indicators","text":"Either named list (table '') tibble (specific tables). return includes metadata attributes: download_info List download statistics source Data source used (web cache) download_time Timestamp download","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abecip_indicators.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Credit Indicators from Abecip — get_abecip_indicators","text":"function returns three tables: sbpe table summarizes monetary flows SBPE. Values nominal currency changes years. Data available since January 1982. Original data Abecip split rural (rural_ non-rural (sbpe_). total columns sum rural non-rural financing. units table summarizes number units financed SBPE. Data available since January 2002. original data discriminates loans used finance new units (_construction) finance acquisitions secondary market (_acquisition). units_ columns absolute units. currency_ columns millions nominal BRL (R$ million). cgi table returns summary data home-equity loans. Data available since January 2017. columns absolute/nominal units except default_rate percentage average_term months.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abecip_indicators.html","id":"deprecation","dir":"Reference","previous_headings":"","what":"Deprecation","title":"Get Credit Indicators from Abecip — get_abecip_indicators","text":"function deprecated. Use get_dataset(\"abecip\") instead. Downloads updated housing credit data Abecip. Abecip represents major financial institutions integrate Brazil's finance housing system (SFH). Provides modern error handling, progress reporting, robust download capabilities.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abecip_indicators.html","id":"progress-reporting","dir":"Reference","previous_headings":"","what":"Progress Reporting","title":"Get Credit Indicators from Abecip — get_abecip_indicators","text":"quiet = FALSE, function provides detailed progress information including download status data processing steps.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abecip_indicators.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error Handling","title":"Get Credit Indicators from Abecip — get_abecip_indicators","text":"function includes retry logic failed downloads graceful fallback cached data downloads fail. Web scraping errors handled automatic retries informative error messages.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abecip_indicators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Credit Indicators from Abecip — get_abecip_indicators","text":"","code":"if (FALSE) { # \\dontrun{ # Download all available data (with progress) all_data <- get_abecip_indicators(quiet = FALSE)  # Get specific table units <- get_abecip_indicators(\"units\")  # Use cached data for faster access cached_data <- get_abecip_indicators(cached = TRUE)  # Check download metadata attr(units, \"download_info\") } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abrainc_indicators.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Indicators from the Abrainc-Fipe Report — get_abrainc_indicators","title":"Import Indicators from the Abrainc-Fipe Report — get_abrainc_indicators","text":"Import Indicators Abrainc-Fipe Report","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abrainc_indicators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Indicators from the Abrainc-Fipe Report — get_abrainc_indicators","text":"","code":"get_abrainc_indicators(   table = \"indicator\",   cached = FALSE,   quiet = FALSE,   max_retries = 3L )"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abrainc_indicators.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Import Indicators from the Abrainc-Fipe Report — get_abrainc_indicators","text":"Abrainc-Fipe available https://www.fipe.org.br/pt-br/indices/abrainc","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abrainc_indicators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Indicators from the Abrainc-Fipe Report — get_abrainc_indicators","text":"table Character. One 'indicator' (default), 'radar', 'leading', ''. cached Logical. TRUE, attempts load data package cache using unified dataset architecture. quiet Logical. TRUE, suppresses progress messages warnings. FALSE (default), provides detailed progress reporting. max_retries Integer. Maximum number retry attempts failed downloads. Defaults 3.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abrainc_indicators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Indicators from the Abrainc-Fipe Report — get_abrainc_indicators","text":"Either named list (table '') tibble (specific tables). return includes metadata attributes: download_info List download statistics source Data source used (web cache) download_time Timestamp download","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abrainc_indicators.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import Indicators from the Abrainc-Fipe Report — get_abrainc_indicators","text":"data 'indicator' gives broad numbers launches, sales, supply, etc. new housing units primary sector. data 'radar' 0-10 standardized index serves proxy general business conditions. data 'leading' compiles building permits data Sao Paulo uses information proxy real estate leading indicator. Units indicated \"Social Housing (MCMV)\" units related either Minha Casa Minha Vida (MCMV) Casa Verde Amarela (CVA) federal government housing programs. programs aim provide affordable housing low medium income families. eligible families enjoy subsidized credit conditions housing free (families commit monthly mortgage payments) usually built private developers. definition social housing varies country caution advised making international comparisons. Data comes developers partnered Abrainc. June 2023, 66 real estate developers associated Abrainc.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abrainc_indicators.html","id":"deprecation","dir":"Reference","previous_headings":"","what":"Deprecation","title":"Import Indicators from the Abrainc-Fipe Report — get_abrainc_indicators","text":"function deprecated. Use get_dataset(\"abrainc\") instead. Downloads data Abrainc-Fipe Indicators report modern error handling, progress reporting, robust download capabilities. Data includes information new launches, sales, delivered units, etc. primary market.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abrainc_indicators.html","id":"progress-reporting","dir":"Reference","previous_headings":"","what":"Progress Reporting","title":"Import Indicators from the Abrainc-Fipe Report — get_abrainc_indicators","text":"quiet = FALSE, function provides detailed progress information including download status data processing steps.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abrainc_indicators.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error Handling","title":"Import Indicators from the Abrainc-Fipe Report — get_abrainc_indicators","text":"function includes retry logic failed downloads graceful fallback cached data downloads fail. Excel download errors handled automatic retries informative error messages.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_abrainc_indicators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Indicators from the Abrainc-Fipe Report — get_abrainc_indicators","text":"","code":"if (FALSE) { # \\dontrun{ # Get all available data (with progress) all_data <- get_abrainc_indicators(quiet = FALSE)  # Get only the Radar data radar <- get_abrainc_indicators(table = \"radar\")  # Use cached data for faster access cached_data <- get_abrainc_indicators(cached = TRUE)  # Check download metadata attr(radar, \"download_info\") } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_available_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Available Tables from Dataset Info — get_available_tables","title":"Get Available Tables from Dataset Info — get_available_tables","text":"Extract list available tables/categories dataset registry information","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_available_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Available Tables from Dataset Info — get_available_tables","text":"","code":"get_available_tables(dataset_info)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_available_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Available Tables from Dataset Info — get_available_tables","text":"dataset_info Dataset metadata registry","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_available_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Available Tables from Dataset Info — get_available_tables","text":"Character vector available table names, NULL categories","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_bcb_realestate.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Real Estate data from the Brazilian Central Bank — get_bcb_realestate","title":"Import Real Estate data from the Brazilian Central Bank — get_bcb_realestate","text":"Import Real Estate data Brazilian Central Bank","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_bcb_realestate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Real Estate data from the Brazilian Central Bank — get_bcb_realestate","text":"","code":"get_bcb_realestate(   table = \"all\",   cached = FALSE,   quiet = FALSE,   max_retries = 3L )"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_bcb_realestate.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Import Real Estate data from the Brazilian Central Bank — get_bcb_realestate","text":"https://dadosabertos.bcb.gov.br/dataset/informacoes--mercado-imobiliario","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_bcb_realestate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Real Estate data from the Brazilian Central Bank — get_bcb_realestate","text":"table Character. One 'accounting', 'application', 'indices', 'sources', 'units', '' (default). cached Logical. TRUE, attempts load data package cache using unified dataset architecture. quiet Logical. TRUE, suppresses progress messages warnings. FALSE (default), provides detailed progress reporting. max_retries Integer. Maximum number retry attempts failed API calls. Defaults 3.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_bcb_realestate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Real Estate data from the Brazilian Central Bank — get_bcb_realestate","text":"table = '' returns tibble 13 columns : series_info: full name identifying series. category: category series (first element series_info). type: subcategory series (second element series_info). v1 v5: elements series_info. value: numeric value series. abbrev_state: two letter state abbreviation. tibble includes metadata attributes: download_info List download statistics source Data source used (api cache) download_time Timestamp download","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_bcb_realestate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import Real Estate data from the Brazilian Central Bank — get_bcb_realestate","text":"table = '' tidy long tibble returned available data. table can hard navigate since contains several different tables within . series uniquely identified series_info column. series_info column also split along v1 v5 columns. complete metadata series available (Portuguese). choices table return wide tibble informative column names. Available options : 'accounting', 'application', 'indices', 'sources', 'units', ''.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_bcb_realestate.html","id":"deprecation","dir":"Reference","previous_headings":"","what":"Deprecation","title":"Import Real Estate data from the Brazilian Central Bank — get_bcb_realestate","text":"function deprecated. Use get_dataset(\"bcb_realestate\") instead. Imports cleans real estate data published monthly Brazilian Central Bank modern error handling, progress reporting, robust API access. Includes credit sources, credit applications, credit operations, financed units, real estate indices.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_bcb_realestate.html","id":"progress-reporting","dir":"Reference","previous_headings":"","what":"Progress Reporting","title":"Import Real Estate data from the Brazilian Central Bank — get_bcb_realestate","text":"quiet = FALSE, function provides detailed progress information including API access status data processing steps.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_bcb_realestate.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error Handling","title":"Import Real Estate data from the Brazilian Central Bank — get_bcb_realestate","text":"function includes retry logic failed API calls graceful fallback cached data API access fails. BCB API errors handled automatic retries informative error messages.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_bcb_realestate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Real Estate data from the Brazilian Central Bank — get_bcb_realestate","text":"","code":"if (FALSE) { # \\dontrun{ # Download all data in long format (with progress) bcb <- get_bcb_realestate(quiet = FALSE)  # Get only data on financed units units <- get_bcb_realestate(\"units\")  # Use cached data for faster access cached_data <- get_bcb_realestate(cached = TRUE)  # Check download metadata attr(units, \"download_info\") } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_bcb_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Download macroeconomic time-series from BCB — get_bcb_series","title":"Download macroeconomic time-series from BCB — get_bcb_series","text":"Download compilation macroeconomic time series data Brazilian Central Bank modern error handling, progress reporting, robust API access.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_bcb_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download macroeconomic time-series from BCB — get_bcb_series","text":"","code":"get_bcb_series(   table = \"all\",   cached = FALSE,   date_start = as.Date(\"2010-01-01\"),   quiet = FALSE,   max_retries = 3L,   ... )"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_bcb_series.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Download macroeconomic time-series from BCB — get_bcb_series","text":"https://www3.bcb.gov.br/sgspub/localizarseries/localizarSeries.?method=prepararTelaLocalizarSeries","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_bcb_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download macroeconomic time-series from BCB — get_bcb_series","text":"table Character. dataset return: \"\" (default), \"credit\", \"exchange\", \"government\", \"interest-rate\", \"real-estate\", \"price\", \"production\". cached Logical. TRUE, attempts load data package cache using unified dataset architecture. date_start Date argument indicating first period extract time series. Defaults 2010-01-01. quiet Logical. TRUE, suppresses progress messages warnings. FALSE (default), provides detailed progress reporting. max_retries Integer. Maximum number retry attempts failed BCB API calls. Defaults 3. ... Additional arguments passed rbcb::get_series.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_bcb_series.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download macroeconomic time-series from BCB — get_bcb_series","text":"12-column tibble selected series BCB. tibble includes metadata attributes: download_info List download statistics source Data source used (api cache) download_time Timestamp download","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_bcb_series.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download macroeconomic time-series from BCB — get_bcb_series","text":"function downloads 15 essential macroeconomic indicators relevant real estate analysis, including price indices, interest rates, credit indicators. series selection simplified v0.4.0 focus core indicators. 15 essential series : 190, 192, 432, 433, 20704, 20756, 20768, 20914, 21072, 21084, 21340, 24364, 28545, 28763, 28770. default value date_start January 2010. arbitrary, advise setting date_start dates prior July 1994. download available data user can set date .Date(\"1900-01-01).","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_bcb_series.html","id":"progress-reporting","dir":"Reference","previous_headings":"","what":"Progress Reporting","title":"Download macroeconomic time-series from BCB — get_bcb_series","text":"quiet = FALSE, function provides detailed progress information including BCB API access status data processing steps.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_bcb_series.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error Handling","title":"Download macroeconomic time-series from BCB — get_bcb_series","text":"function includes retry logic failed BCB API calls robust error handling metadata processing data validation.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_bcb_series.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download macroeconomic time-series from BCB — get_bcb_series","text":"","code":"if (FALSE) { # \\dontrun{ # Get price indicators (with progress) prices <- get_bcb_series(table = \"price\", quiet = FALSE)  # Get all series bcb_series <- get_bcb_series(date_start = as.Date(\"2020-01-01\"))  # Use cached data for faster access cached_data <- get_bcb_series(cached = TRUE)  # Check download metadata attr(prices, \"download_info\") } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cache_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Cache Path — get_cache_path","title":"Get Cache Path — get_cache_path","text":"Get full path package cache directory","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cache_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Cache Path — get_cache_path","text":"","code":"get_cache_path(cache_dir = \"cached_data\")"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cache_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Cache Path — get_cache_path","text":"cache_dir Character. Cache subdirectory name","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cache_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Cache Path — get_cache_path","text":"Character. Full path cache directory","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cached_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Cached Name for import_cached Function — get_cached_name","title":"Get Cached Name for import_cached Function — get_cached_name","text":"Maps dataset names parameter names used import_cached()","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cached_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Cached Name for import_cached Function — get_cached_name","text":"","code":"get_cached_name(name, dataset_info, table = NULL)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic.html","id":null,"dir":"Reference","previous_headings":"","what":"Get CBIC Data (Unified Interface) — get_cbic","title":"Get CBIC Data (Unified Interface) — get_cbic","text":"Main wrapper function accessing CBIC construction materials data unified get_dataset() interface. function handles complex multi-material, multi-table structure CBIC data flattening consistent single-tibble API.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get CBIC Data (Unified Interface) — get_cbic","text":"","code":"get_cbic(   table = \"cement_monthly_consumption\",   cached = FALSE,   quiet = FALSE,   max_retries = 3L,   warn_level = \"none\" )"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get CBIC Data (Unified Interface) — get_cbic","text":"table Character. specific table retrieve. Options include: cement_monthly_consumption Monthly cement consumption state (default) cement_annual_consumption Annual cement consumption region cement_production_exports Production, consumption, export data cement_monthly_production Monthly cement production state cement_cub_prices CUB cement prices state steel_prices Steel prices state steel_production Steel production data pim Industrial production index construction materials cached Logical. TRUE, try load data cache first quiet Logical. TRUE, suppress progress messages max_retries Integer. Maximum number retry attempts downloads warn_level Character. Warning level messages: \"none\", \"user\", \"dev\". Defaults \"none\" internal use.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get CBIC Data (Unified Interface) — get_cbic","text":"tibble requested CBIC data","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_cement.html","id":null,"dir":"Reference","previous_headings":"","what":"Get CBIC cement consumption data — get_cbic_cement","title":"Get CBIC cement consumption data — get_cbic_cement","text":"Complete workflow get cleaned cement consumption data CBIC. Includes annual, monthly, production, CUB price data.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_cement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get CBIC cement consumption data — get_cbic_cement","text":"","code":"get_cbic_cement(   table = \"monthly_consumption\",   cached = FALSE,   quiet = FALSE,   max_retries = 3L,   warn_level = \"user\" )"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_cement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get CBIC cement consumption data — get_cbic_cement","text":"table Character. dataset return: \"annual_consumption\", \"production_exports\", \"monthly_consumption\", \"monthly_production\", \"cub_prices\", \"\" (default: \"monthly_consumption\") cached Logical. TRUE, try load data cache first (default: FALSE) quiet Logical. TRUE, suppress progress messages (default: FALSE) max_retries Integer. Maximum number retry attempts downloads (default: 3L) warn_level Character. Warning level messages: \"none\", \"user\", \"dev\". Defaults \"none\" internal use.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_cement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get CBIC cement consumption data — get_cbic_cement","text":"tibble cement data, list table = \"\"","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_cement.html","id":"progress-reporting","dir":"Reference","previous_headings":"","what":"Progress Reporting","title":"Get CBIC cement consumption data — get_cbic_cement","text":"quiet = FALSE, function provides detailed progress information web scraping, file downloads, data processing steps.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_cement.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error Handling","title":"Get CBIC cement consumption data — get_cbic_cement","text":"function includes retry logic failed downloads robust error handling malformed Excel files.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_cement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get CBIC cement consumption data — get_cbic_cement","text":"","code":"if (FALSE) { # \\dontrun{ # Get monthly consumption data (default) monthly_data <- get_cbic_cement()  # Get all datasets all_cement <- get_cbic_cement(table = \"all\")  # Get specific dataset with progress reporting prices <- get_cbic_cement(table = \"cub_prices\", quiet = FALSE) } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_dim_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get state dimension data for CBIC — get_cbic_dim_state","title":"Helper function to get state dimension data for CBIC — get_cbic_dim_state","text":"Helper function get state dimension data CBIC","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_dim_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get state dimension data for CBIC — get_cbic_dim_state","text":"","code":"get_cbic_dim_state()"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_dim_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get state dimension data for CBIC — get_cbic_dim_state","text":"tibble state codes, names, abbreviations","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Get raw CBIC files for a specific material — get_cbic_files","title":"Get raw CBIC files for a specific material — get_cbic_files","text":"Downloads Excel files construction material CBIC database. Returns raw download results custom processing.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get raw CBIC files for a specific material — get_cbic_files","text":"","code":"get_cbic_files(material_name, quiet = FALSE)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get raw CBIC files for a specific material — get_cbic_files","text":"material_name Character vector length 1. Name material (e.g., \"cimento\") quiet Logical. TRUE, suppress progress messages","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get raw CBIC files for a specific material — get_cbic_files","text":"tibble download results including file paths","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get raw CBIC files for a specific material — get_cbic_files","text":"","code":"if (FALSE) { # \\dontrun{ cement_files <- get_cbic_files(\"cimento\") } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_materials.html","id":null,"dir":"Reference","previous_headings":"","what":"Get available CBIC materials — get_cbic_materials","title":"Get available CBIC materials — get_cbic_materials","text":"Get metadata construction materials available CBIC database.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_materials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get available CBIC materials — get_cbic_materials","text":"","code":"get_cbic_materials()"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_materials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get available CBIC materials — get_cbic_materials","text":"tibble material titles, descriptions, links","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_materials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get available CBIC materials — get_cbic_materials","text":"","code":"if (FALSE) { # \\dontrun{ materials <- get_cbic_materials() } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_pim.html","id":null,"dir":"Reference","previous_headings":"","what":"Get CBIC PIM industrial production data — get_cbic_pim","title":"Get CBIC PIM industrial production data — get_cbic_pim","text":"Complete workflow get cleaned PIM (Pesquisa Industrial Mensal) industrial production index data CBIC. data tracks physical production typical construction industry inputs Brazil.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_pim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get CBIC PIM industrial production data — get_cbic_pim","text":"","code":"get_cbic_pim(   table = \"production_index\",   cached = FALSE,   quiet = FALSE,   max_retries = 3L )"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_pim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get CBIC PIM industrial production data — get_cbic_pim","text":"table Character. dataset return: \"production_index\" \"\" (default: \"production_index\") cached Logical. TRUE, try load data cache first (default: FALSE) quiet Logical. TRUE, suppress progress messages (default: FALSE) max_retries Integer. Maximum number retry attempts downloads (default: 3L)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_pim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get CBIC PIM industrial production data — get_cbic_pim","text":"tibble PIM production index data, list table = \"\"","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_pim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get CBIC PIM industrial production data — get_cbic_pim","text":"PIM data uses production index base year 2022 = 100. data covers monthly observations 2012 onwards. Note files 1 2 available CBIC website contain historical data discontinued methodologies processed function.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_pim.html","id":"progress-reporting","dir":"Reference","previous_headings":"","what":"Progress Reporting","title":"Get CBIC PIM industrial production data — get_cbic_pim","text":"quiet = FALSE, function provides detailed progress information web scraping, file downloads, data processing steps.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_pim.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error Handling","title":"Get CBIC PIM industrial production data — get_cbic_pim","text":"function includes retry logic failed downloads robust error handling malformed Excel files.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_pim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get CBIC PIM industrial production data — get_cbic_pim","text":"","code":"if (FALSE) { # \\dontrun{ # Get production index data (default) production <- get_cbic_pim()  # Get all PIM datasets all_pim <- get_cbic_pim(table = \"all\")  # Get data with progress reporting production <- get_cbic_pim(quiet = FALSE) } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_specific_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Get specific CBIC file for a table instead of downloading all — get_cbic_specific_file","title":"Get specific CBIC file for a table instead of downloading all — get_cbic_specific_file","text":"Get specific CBIC file table instead downloading ","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_specific_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get specific CBIC file for a table instead of downloading all — get_cbic_specific_file","text":"","code":"get_cbic_specific_file(material_url, table_type, quiet = FALSE)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_specific_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get specific CBIC file for a table instead of downloading all — get_cbic_specific_file","text":"material_url URL material page table_type Type table needed quiet Whether suppress messages","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_steel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get CBIC steel data (prices and production) — get_cbic_steel","title":"Get CBIC steel data (prices and production) — get_cbic_steel","text":"Complete workflow get cleaned steel price production data CBIC. Returns steel price data default, datasets requested.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_steel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get CBIC steel data (prices and production) — get_cbic_steel","text":"","code":"get_cbic_steel(   table = \"prices\",   cached = FALSE,   quiet = FALSE,   max_retries = 3L )"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_steel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get CBIC steel data (prices and production) — get_cbic_steel","text":"table Character. dataset return: \"prices\", \"production\", \"\" (default: \"prices\") cached Logical. TRUE, try load data cache first (default: FALSE) quiet Logical. TRUE, suppress progress messages (default: FALSE) max_retries Integer. Maximum number retry attempts downloads (default: 3L)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_steel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get CBIC steel data (prices and production) — get_cbic_steel","text":"tibble steel data, list table = \"\"","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_steel.html","id":"progress-reporting","dir":"Reference","previous_headings":"","what":"Progress Reporting","title":"Get CBIC steel data (prices and production) — get_cbic_steel","text":"quiet = FALSE, function provides detailed progress information web scraping, file downloads, data processing steps.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_steel.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error Handling","title":"Get CBIC steel data (prices and production) — get_cbic_steel","text":"function includes retry logic failed downloads robust error handling malformed Excel files.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_cbic_steel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get CBIC steel data (prices and production) — get_cbic_steel","text":"","code":"if (FALSE) { # \\dontrun{ # Get steel prices (default) prices <- get_cbic_steel()  # Get all steel datasets all_steel <- get_cbic_steel(table = \"all\")  # Get production data with progress reporting production <- get_cbic_steel(table = \"production\", quiet = FALSE) } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Dataset — get_dataset","title":"Get Dataset — get_dataset","text":"Unified interface accessing realestatebr package datasets automatic fallback different data sources (cache, GitHub, fresh download).","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Dataset — get_dataset","text":"","code":"get_dataset(   name,   table = NULL,   source = \"auto\",   date_start = NULL,   date_end = NULL,   ... )"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Dataset — get_dataset","text":"name Character. Dataset name (see list_datasets() available options) table Character. Specific table within dataset (optional). Use get_dataset_info(name) see available tables. source Character. Data source preference: \"auto\" Automatic fallback: cache → GitHub → fresh (default) \"cache\" Local package cache \"github\" GitHub repository cache \"fresh\" Fresh download original source date_start Date. Start date time series data (applicable) date_end Date. End date time series data (applicable) ... Additional arguments passed legacy functions","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Dataset — get_dataset","text":"Dataset tibble list, depending dataset structure. Use get_dataset_info(name) see expected structure.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset.html","id":"debug-mode","dir":"Reference","previous_headings":"","what":"Debug Mode","title":"Get Dataset — get_dataset","text":"realestatebr package includes comprehensive debug mode development troubleshooting. Debug mode shows detailed processing messages including file--file progress, data type detection, web scraping steps, . Enable debug mode: Environment variable Set REALESTATEBR_DEBUG=TRUE environment Package option Use options(realestatebr.debug = TRUE) Debug mode examples: debug mode shows: File download progress retry attempts Excel sheet processing steps Data type detection validation Web scraping details error handling Cache access fallback operations Data cleaning transformation steps Debug mode particularly useful troubleshooting data access issues, understanding complex dataset processing, developing new functionality.","code":"# Enable debug mode via environment variable Sys.setenv(REALESTATEBR_DEBUG = \"TRUE\") data <- get_dataset(\"cbic\")  # Shows detailed processing messages  # Enable debug mode via package option options(realestatebr.debug = TRUE) data <- get_dataset(\"rppi\")  # Shows detailed processing messages  # Disable debug mode options(realestatebr.debug = FALSE) # or Sys.unsetenv(\"REALESTATEBR_DEBUG\")"},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Dataset — get_dataset","text":"","code":"if (FALSE) { # \\dontrun{ # Get all ABECIP indicators (default table) abecip_data <- get_dataset(\"abecip\")  # Get only SBPE data from ABECIP sbpe_data <- get_dataset(\"abecip\", \"sbpe\")  # Force fresh download fresh_data <- get_dataset(\"bcb_realestate\", source = \"fresh\")  # Get BCB data for specific time period bcb_recent <- get_dataset(\"bcb_series\",                          date_start = as.Date(\"2020-01-01\")) } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset_from_source.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Dataset from Specific Source — get_dataset_from_source","title":"Get Dataset from Specific Source — get_dataset_from_source","text":"Internal function get data specific source type.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset_from_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Dataset from Specific Source — get_dataset_from_source","text":"","code":"get_dataset_from_source(   name,   dataset_info,   source,   table,   date_start,   date_end,   ... )"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset_from_source.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Dataset from Specific Source — get_dataset_from_source","text":"name Dataset name dataset_info Dataset metadata source Source type (\"cache\", \"github\", \"fresh\") table Optional table date_start Optional start date date_end Optional end date ... Additional arguments","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset_from_source.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Dataset from Specific Source — get_dataset_from_source","text":"Dataset error","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Dataset Information — get_dataset_info","title":"Get Dataset Information — get_dataset_info","text":"Get detailed metadata specific dataset including available categories column descriptions.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Dataset Information — get_dataset_info","text":"","code":"get_dataset_info(name)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Dataset Information — get_dataset_info","text":"name Character. Name dataset (use list_datasets() see available names)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Dataset Information — get_dataset_info","text":"list detailed dataset information including: metadata Basic dataset information categories Available categories/subtables source_info Data source details","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Dataset Information — get_dataset_info","text":"","code":"if (FALSE) { # \\dontrun{ # Get detailed info for ABECIP indicators info <- get_dataset_info(\"abecip\") str(info) } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset_specific_translations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Dataset-Specific Translations — get_dataset_specific_translations","title":"Get Dataset-Specific Translations — get_dataset_specific_translations","text":"Get Dataset-Specific Translations","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset_specific_translations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Dataset-Specific Translations — get_dataset_specific_translations","text":"","code":"get_dataset_specific_translations(dataset_name)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset_specific_translations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Dataset-Specific Translations — get_dataset_specific_translations","text":"dataset_name Name dataset","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset_specific_translations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Dataset-Specific Translations — get_dataset_specific_translations","text":"List dataset-specific translations","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset_with_fallback.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Dataset with Fallback Strategy — get_dataset_with_fallback","title":"Get Dataset with Fallback Strategy — get_dataset_with_fallback","text":"Internal function implementing auto fallback strategy: cache → GitHub → fresh download","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset_with_fallback.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Dataset with Fallback Strategy — get_dataset_with_fallback","text":"","code":"get_dataset_with_fallback(name, dataset_info, table, date_start, date_end, ...)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset_with_fallback.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Dataset with Fallback Strategy — get_dataset_with_fallback","text":"name Dataset name dataset_info Dataset metadata registry table Optional table filter date_start Optional start date date_end Optional end date ... Additional arguments","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_dataset_with_fallback.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Dataset with Fallback Strategy — get_dataset_with_fallback","text":"Dataset NULL methods fail","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_fgv_ibre.html","id":null,"dir":"Reference","previous_headings":"","what":"Get FGV IBRE Confidence Indicators — get_fgv_ibre","title":"Get FGV IBRE Confidence Indicators — get_fgv_ibre","text":"Download clean construction confidence indicators estimated released Getulio Vargas Foundation (FGV IBRE) modern error handling progress reporting capabilities.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_fgv_ibre.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get FGV IBRE Confidence Indicators — get_fgv_ibre","text":"","code":"get_fgv_ibre(table = \"indicators\", cached = TRUE, quiet = FALSE)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_fgv_ibre.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get FGV IBRE Confidence Indicators — get_fgv_ibre","text":"table Character. dataset return: \"indicators\" (default) \"\". cached Logical. TRUE (default), loads data package cache using unified dataset architecture. FALSE, uses internal package data objects. quiet Logical. TRUE, suppresses progress messages warnings. FALSE (default), provides detailed progress reporting.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_fgv_ibre.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get FGV IBRE Confidence Indicators — get_fgv_ibre","text":"tibble containing construction confidence indicator series FGV IBRE. tibble includes metadata attributes: download_info List access statistics source Data source used (cache internal) download_time Timestamp access","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_fgv_ibre.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get FGV IBRE Confidence Indicators — get_fgv_ibre","text":"function provides access construction confidence indicators FGV IBRE, including confidence indices, expectation indicators, INCC price indices. function supports cached data access fallback package data. Note: Fresh data downloads FGV APIs currently supported. function accesses cached data internal package data objects.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_fgv_ibre.html","id":"progress-reporting","dir":"Reference","previous_headings":"","what":"Progress Reporting","title":"Get FGV IBRE Confidence Indicators — get_fgv_ibre","text":"quiet = FALSE, function provides progress information data access operations.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_fgv_ibre.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error Handling","title":"Get FGV IBRE Confidence Indicators — get_fgv_ibre","text":"function includes robust error handling data access provides informative error messages data unavailable.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_fgv_ibre.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get FGV IBRE Confidence Indicators — get_fgv_ibre","text":"","code":"if (FALSE) { # \\dontrun{ # Get FGV IBRE indicators from cache (with progress) fgv <- get_fgv_ibre(quiet = FALSE)  # Use internal package data fgv <- get_fgv_ibre(cached = FALSE)  # Check access metadata attr(fgv, \"download_info\") } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_from_github_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Data from GitHub Cache — get_from_github_cache","title":"Get Data from GitHub Cache — get_from_github_cache","text":"Get Data GitHub Cache","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_from_github_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Data from GitHub Cache — get_from_github_cache","text":"","code":"get_from_github_cache(name, dataset_info, table)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_from_legacy_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Data from Legacy Function — get_from_legacy_function","title":"Get Data from Legacy Function — get_from_legacy_function","text":"Get Data Legacy Function","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_from_legacy_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Data from Legacy Function — get_from_legacy_function","text":"","code":"get_from_legacy_function(name, dataset_info, table, date_start, date_end, ...)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_from_local_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Data from Local Cache — get_from_local_cache","title":"Get Data from Local Cache — get_from_local_cache","text":"Get Data Local Cache","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_from_local_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Data from Local Cache — get_from_local_cache","text":"","code":"get_from_local_cache(name, dataset_info, table)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_itbi.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Property Tax Records — get_itbi","title":"Get Property Tax Records — get_itbi","text":"Imports cleans property tax records main Brazilian Cities. Currently available Belo Horizonte São Paulo. Unlike functions, cached data available.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_itbi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Property Tax Records — get_itbi","text":"","code":"get_itbi(city = \"bhe\")"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_itbi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Property Tax Records — get_itbi","text":"city Must one 'bhe', 'spo', 'Belo Horizonte', 'São Paulo'","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_itbi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Property Tax Records — get_itbi","text":"tibble","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_nre_ire.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the IRE Index — get_nre_ire","title":"Get the IRE Index — get_nre_ire","text":"Imports Real Estate Index NRE-Poli (USP) modern error handling progress reporting capabilities.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_nre_ire.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the IRE Index — get_nre_ire","text":"","code":"get_nre_ire(table = \"indicators\", cached = TRUE, quiet = FALSE)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_nre_ire.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get the IRE Index — get_nre_ire","text":"Original series methodology available https://www.realestate.br/site/conteudo/pagina/1,84+Indice_IRE.html.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_nre_ire.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the IRE Index — get_nre_ire","text":"table Character. dataset return: \"indicators\" (default) \"\". cached Logical. TRUE (default), loads data package cache using unified dataset architecture. currently supported method dataset. quiet Logical. TRUE, suppresses progress messages warnings. FALSE (default), provides detailed progress reporting.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_nre_ire.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the IRE Index — get_nre_ire","text":"tibble 8 columns : ire IRE Index. ire_r50_plus IRE Index top 50% companies. ire_r50_minus IRE Index bottom 50% companies. ire_bi IRE-BI Index (non-residential). ibov Ibovespa Index. ibov_points Ibovespa Index points. ire_ibov ratio IRE Index Ibovespa Index. tibble includes metadata attributes: download_info List access statistics source Data source used (cache) download_time Timestamp access","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_nre_ire.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the IRE Index — get_nre_ire","text":"Real Estate Index (IRE) tracks average stock price real estate companies Brazil. Index maintained Real Estate Research Group Polytechnich School University São Paulo (NRE-Poli-USP). values indexed (100 = May/2006). Check return definition column. Note: function currently supports cached data loading. Fresh data downloads available original data source requires manual processing.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_nre_ire.html","id":"progress-reporting","dir":"Reference","previous_headings":"","what":"Progress Reporting","title":"Get the IRE Index — get_nre_ire","text":"quiet = FALSE, function provides progress information cache loading operations.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_nre_ire.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error Handling","title":"Get the IRE Index — get_nre_ire","text":"function includes robust error handling cache access provides informative error messages data unavailable.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_nre_ire.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the IRE Index — get_nre_ire","text":"","code":"if (FALSE) { # \\dontrun{ # Import the IRE Index (with progress) ire <- get_nre_ire(quiet = FALSE)  # Import quietly ire <- get_nre_ire(cached = TRUE, quiet = TRUE)  # Check access metadata attr(ire, \"download_info\") } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_property_records.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Property Records Table — get_property_records","title":"Get Property Records Table — get_property_records","text":"Imports cleans specific tables date property transaction records available Registro de Imoveis modern error handling, progress reporting, robust download capabilities.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_property_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Property Records Table — get_property_records","text":"","code":"get_property_records(   table = \"capitals\",   cached = FALSE,   quiet = FALSE,   max_retries = 3L )"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_property_records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Property Records Table — get_property_records","text":"table Character. One : \"capitals\" Records data capital cities (default) \"capitals_transfers\" Transfer data capital cities \"cities\" Records data cities \"aggregates\" Records data SP regional aggregates \"aggregates_transfers\" Transfer data SP aggregates cached Logical. TRUE, attempts load data package cache. quiet Logical. TRUE, suppresses progress messages warnings. FALSE (default), provides detailed progress reporting. max_retries Integer. Maximum number retry attempts failed downloads. Defaults 3.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_property_records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Property Records Table — get_property_records","text":"tibble requested property records table. return includes metadata attributes: download_info List download statistics source Data source used (web cache) download_time Timestamp download","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_property_records.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Property Records Table — get_property_records","text":"function scrapes download links Registro de Imoveis website processes Excel files containing property transaction data. function handles multiple data categories includes comprehensive data cleaning.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_property_records.html","id":"progress-reporting","dir":"Reference","previous_headings":"","what":"Progress Reporting","title":"Get Property Records Table — get_property_records","text":"quiet = FALSE, function provides detailed progress information including web scraping status, download progress, data processing steps.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_property_records.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error Handling","title":"Get Property Records Table — get_property_records","text":"function includes retry logic failed downloads robust error handling web scraping Excel processing operations.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_property_records.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Property Records Table — get_property_records","text":"","code":"if (FALSE) { # \\dontrun{ # Get capitals records data (default) capitals <- get_property_records()  # Get transfer data for capital cities transfers <- get_property_records(\"capitals_transfers\")  # Get all cities records data cities <- get_property_records(\"cities\")  # Get SP regional aggregates aggregates <- get_property_records(\"aggregates\")  # Use cached data for faster access cached_data <- get_property_records(\"capitals\", cached = TRUE)  # Check download metadata attr(capitals, \"download_info\") } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds import range for each table — get_range","title":"Finds import range for each table — get_range","text":"Finds import range table","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds import range for each table — get_range","text":"","code":"get_range(path = NULL, sheet, skip_row = 4)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds import range for each table — get_range","text":"path Path excel file sheet Name number sheet analyzed skip_row Additional argument passed readxl::read_excel()","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_range.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Finds import range for each table — get_range","text":"Based date column, finds range imported.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_range_new.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Excel Range for Data Extraction — get_range_new","title":"Get Excel Range for Data Extraction — get_range_new","text":"Determines exact range cells containing data Excel sheet. function finds boundaries data identifying last row containing dates last column containing non-NA values.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_range_new.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Excel Range for Data Extraction — get_range_new","text":"","code":"get_range_new(path = NULL, sheet, skip_row = 4)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_range_new.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Excel Range for Data Extraction — get_range_new","text":"path Character string. Path Excel file. sheet Character string. Name sheet analyze. skip_row Numeric. Number rows skip actual data begins. Defaults 4.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_range_new.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Excel Range for Data Extraction — get_range_new","text":"Character string representing Excel range (e.g., \"B5:BD162\").","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_range_new.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Excel Range for Data Extraction — get_range_new","text":"function works : Reading Excel sheet Identifying columns containing dates Finding last row valid dates Finding last column non-NA values Converting column numbers Excel-style letters Constructing range string","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_range_new.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Excel Range for Data Extraction — get_range_new","text":"","code":"if (FALSE) { # \\dontrun{ # Get range from a specific sheet range <- get_range(\"path/to/file.xlsx\", sheet = \"Sheet1\", skip_row = 4) print(range) # Returns something like \"B5:BD162\" } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_ri_aggregates_robust.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Aggregates Data with Robust Error Handling — get_ri_aggregates_robust","title":"Get Aggregates Data with Robust Error Handling — get_ri_aggregates_robust","text":"Modern version get_ri_aggregates retry logic progress reporting.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_ri_aggregates_robust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Aggregates Data with Robust Error Handling — get_ri_aggregates_robust","text":"","code":"get_ri_aggregates_robust(url, quiet, max_retries)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_ri_aggregates_robust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Aggregates Data with Robust Error Handling — get_ri_aggregates_robust","text":"url Download URL Excel file quiet Logical controlling messages max_retries Maximum retry attempts","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_ri_aggregates_robust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Aggregates Data with Robust Error Handling — get_ri_aggregates_robust","text":"Processed aggregates data","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_ri_capitals_robust.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Capitals Data with Robust Error Handling — get_ri_capitals_robust","title":"Get Capitals Data with Robust Error Handling — get_ri_capitals_robust","text":"Modern version get_ri_capitals retry logic progress reporting.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_ri_capitals_robust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Capitals Data with Robust Error Handling — get_ri_capitals_robust","text":"","code":"get_ri_capitals_robust(url, quiet, max_retries)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_ri_capitals_robust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Capitals Data with Robust Error Handling — get_ri_capitals_robust","text":"url Download URL Excel file quiet Logical controlling messages max_retries Maximum retry attempts","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_ri_capitals_robust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Capitals Data with Robust Error Handling — get_ri_capitals_robust","text":"Processed capitals data","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Stacked RPPI Data — get_rppi","title":"Get Stacked RPPI Data — get_rppi","text":"Get Stacked RPPI Data","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Stacked RPPI Data — get_rppi","text":"","code":"get_rppi(table = \"sale\", cached = FALSE, quiet = FALSE, max_retries = 3L)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Stacked RPPI Data — get_rppi","text":"table Character. \"sale\", \"rent\", \"\" cached Logical. TRUE, loads GitHub cache quiet Logical. TRUE, suppresses messages max_retries Integer. Maximum retry attempts","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Stacked RPPI Data — get_rppi","text":"Tibble columns: date, name_muni, index, chg, acum12m, source (plus transaction_type table=\"\")","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Stacked RPPI Data — get_rppi","text":"Stacks multiple Brazilian residential property price indices single tibble consistent columns easy comparison. Handles different RPPI sources (IGMI-R, IVG-R, FipeZap, IVAR, IQA, Secovi-SP) standardizes formats. Note: IQA provides raw prices, index numbers. Use get_dataset(\"rppi\", table) individual indices.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_bis.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Residential Property Price Indices from BIS — get_rppi_bis","title":"Get Residential Property Price Indices from BIS — get_rppi_bis","text":"Get specific tables Residential Property Price Indices series Bank International Settlements (BIS) modern error handling, progress reporting, robust Excel download capabilities. Always returns single tibble.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_bis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Residential Property Price Indices from BIS — get_rppi_bis","text":"","code":"get_rppi_bis(   table = \"selected\",   cached = FALSE,   quiet = FALSE,   max_retries = 3L )"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_bis.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get Residential Property Price Indices from BIS — get_rppi_bis","text":"https://data.bis.org/topics/RPP","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_bis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Residential Property Price Indices from BIS — get_rppi_bis","text":"table Character. dataset table return: \"selected\" Selected RPPI series major countries (default) \"detailed_monthly\" Monthly detailed RPPI data \"detailed_quarterly\" Quarterly detailed RPPI data \"detailed_annual\" Annual detailed RPPI data \"detailed_semiannual\" Semiannual detailed RPPI data cached Logical. TRUE, attempts load data package cache using unified dataset architecture. quiet Logical. TRUE, suppresses progress messages warnings. FALSE (default), provides detailed progress reporting. max_retries Integer. Maximum number retry attempts failed Excel download operations. Defaults 3.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_bis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Residential Property Price Indices from BIS — get_rppi_bis","text":"tibble requested RPPI data. return includes metadata attributes: download_info List download statistics source Data source used (web cache) download_time Timestamp download","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_bis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Residential Property Price Indices from BIS — get_rppi_bis","text":"simple selected series use table = 'selected'. information series available BIS website detailed datasets, choose monthly, quarterly, annual, semiannual tables. information available BIS website","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_bis.html","id":"progress-reporting","dir":"Reference","previous_headings":"","what":"Progress Reporting","title":"Get Residential Property Price Indices from BIS — get_rppi_bis","text":"quiet = FALSE, function provides detailed progress information including Excel download status data processing steps.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_bis.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error Handling","title":"Get Residential Property Price Indices from BIS — get_rppi_bis","text":"function includes retry logic failed Excel downloads robust error handling multi-sheet processing operations.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_bis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Residential Property Price Indices from BIS — get_rppi_bis","text":"","code":"if (FALSE) { # \\dontrun{ # Download selected RPPI data from BIS (with progress) bis <- get_rppi_bis(quiet = FALSE)  # Get monthly detailed data monthly <- get_rppi_bis(\"detailed_monthly\")  # For faster download time use cached data bis <- get_rppi_bis(\"detailed_quarterly\", cached = TRUE)  # Check download metadata attr(bis, \"download_info\") } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_bis_detailed_robust.html","id":null,"dir":"Reference","previous_headings":"","what":"Get RPPI BIS Detailed Data with Robust Error Handling — get_rppi_bis_detailed_robust","title":"Get RPPI BIS Detailed Data with Robust Error Handling — get_rppi_bis_detailed_robust","text":"Internal function download BIS RPPI detailed data retry logic.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_bis_detailed_robust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get RPPI BIS Detailed Data with Robust Error Handling — get_rppi_bis_detailed_robust","text":"","code":"get_rppi_bis_detailed_robust(quiet, max_retries)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_bis_detailed_robust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get RPPI BIS Detailed Data with Robust Error Handling — get_rppi_bis_detailed_robust","text":"quiet Logical controlling messages max_retries Maximum number retry attempts","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_bis_detailed_robust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get RPPI BIS Detailed Data with Robust Error Handling — get_rppi_bis_detailed_robust","text":"Downloaded processed BIS detailed data","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_bis_selected_robust.html","id":null,"dir":"Reference","previous_headings":"","what":"Get RPPI BIS Selected Data with Robust Error Handling — get_rppi_bis_selected_robust","title":"Get RPPI BIS Selected Data with Robust Error Handling — get_rppi_bis_selected_robust","text":"Internal function download BIS RPPI selected data retry logic.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_bis_selected_robust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get RPPI BIS Selected Data with Robust Error Handling — get_rppi_bis_selected_robust","text":"","code":"get_rppi_bis_selected_robust(quiet, max_retries)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_bis_selected_robust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get RPPI BIS Selected Data with Robust Error Handling — get_rppi_bis_selected_robust","text":"quiet Logical controlling messages max_retries Maximum number retry attempts","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_bis_selected_robust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get RPPI BIS Selected Data with Robust Error Handling — get_rppi_bis_selected_robust","text":"Downloaded processed BIS selected data","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_fipezap.html","id":null,"dir":"Reference","previous_headings":"","what":"Get FipeZap RPPI — get_rppi_fipezap","title":"Get FipeZap RPPI — get_rppi_fipezap","text":"Get FipeZap RPPI","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_fipezap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get FipeZap RPPI — get_rppi_fipezap","text":"","code":"get_rppi_fipezap(city = \"all\", cached = FALSE, quiet = FALSE, max_retries = 3L)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_fipezap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get FipeZap RPPI — get_rppi_fipezap","text":"city City name \"\" (default). Filtering city save processing time. cached Logical. TRUE, loads GitHub cache quiet Logical. TRUE, suppresses warnings max_retries Integer. Maximum retry attempts","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_fipezap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get FipeZap RPPI — get_rppi_fipezap","text":"Tibble columns: date, name_muni, market, rent_sale, variable, rooms, value","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_fipezap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get FipeZap RPPI — get_rppi_fipezap","text":"FipeZap Index monthly median stratified index across ~20 Brazilian cities, based online listings Zap Imóveis. Includes residential commercial markets, sale rent, stratified number rooms. overall city index weighted sum median prices room/region. Residential index includes apartments, studios, flats. National index: name_muni == 'Brazil' (standardization).","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_igmi.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the IGMI Sales Index — get_rppi_igmi","title":"Get the IGMI Sales Index — get_rppi_igmi","text":"Get IGMI Sales Index","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_igmi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the IGMI Sales Index — get_rppi_igmi","text":"","code":"get_rppi_igmi(cached = FALSE, quiet = FALSE, max_retries = 3L)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_igmi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the IGMI Sales Index — get_rppi_igmi","text":"cached Logical. TRUE, loads GitHub cache quiet Logical. TRUE, suppresses warnings max_retries Integer. Maximum retry attempts downloads","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_igmi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the IGMI Sales Index — get_rppi_igmi","text":"Tibble columns: date, name_muni, index, chg, acum12m","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_igmi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the IGMI Sales Index — get_rppi_igmi","text":"IGMI-R (Residential Real Estate Index) hedonic sales index based bank appraisal reports, available Brazil + 10 capital cities. Hedonic indices account composition bias quality differentials across housing stock. Maintained ABECIP partnership FGV.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_iqa.html","id":null,"dir":"Reference","previous_headings":"","what":"Get QuintoAndar Rental Index (IQA) — get_rppi_iqa","title":"Get QuintoAndar Rental Index (IQA) — get_rppi_iqa","text":"Get QuintoAndar Rental Index (IQA)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_iqa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get QuintoAndar Rental Index (IQA) — get_rppi_iqa","text":"","code":"get_rppi_iqa(cached = FALSE, quiet = FALSE, max_retries = 3L)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_iqa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get QuintoAndar Rental Index (IQA) — get_rppi_iqa","text":"cached Logical. TRUE, loads GitHub cache quiet Logical. TRUE, suppresses warnings max_retries Integer. Maximum retry attempts downloads","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_iqa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get QuintoAndar Rental Index (IQA) — get_rppi_iqa","text":"Tibble columns: date, name_muni, rent_price, chg, acum12m","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_iqa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get QuintoAndar Rental Index (IQA) — get_rppi_iqa","text":"IQA (QuintoAndar Rental Index) median stratified index Rio de Janeiro São Paulo, based new rent contracts managed QuintoAndar. Includes apartments, studios, flats. Note: IQA provides raw prices (index numbers), rent_price median rent per square meter.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_iqaiw.html","id":null,"dir":"Reference","previous_headings":"","what":"Get QuintoAndar ImovelWeb Rental Index (IQAIW) — get_rppi_iqaiw","title":"Get QuintoAndar ImovelWeb Rental Index (IQAIW) — get_rppi_iqaiw","text":"Get QuintoAndar ImovelWeb Rental Index (IQAIW)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_iqaiw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get QuintoAndar ImovelWeb Rental Index (IQAIW) — get_rppi_iqaiw","text":"","code":"get_rppi_iqaiw(cached = FALSE, quiet = FALSE, max_retries = 3L)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_iqaiw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get QuintoAndar ImovelWeb Rental Index (IQAIW) — get_rppi_iqaiw","text":"cached Logical. TRUE, loads GitHub cache quiet Logical. TRUE, suppresses warnings max_retries Integer. Maximum retry attempts downloads","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_iqaiw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get QuintoAndar ImovelWeb Rental Index (IQAIW) — get_rppi_iqaiw","text":"Tibble columns: date, name_muni, index, chg, acum12m, price_m2","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_iqaiw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get QuintoAndar ImovelWeb Rental Index (IQAIW) — get_rppi_iqaiw","text":"IQAIW (Índice QuintoAndar ImovelWeb) rental index major Brazilian cities. index based new rental contracts (managed QuintoAndar) online listings QuintoAndar's listings (including ImovelWeb). IQAIW develoepd 2023 replaced former IQA index. Given change methodology data sources, IQAIW directly comparable IQA index. Formally, index hedonic double imputed index, controlling quality changes using flexible GAM specification location variables. sense, IQAIW theoretically sound median stratified indices like FipeZap former IQA. mixture listings contracts, however, lacks theoretical support seems mainly driven branding purposes. ImovelWeb brand purchased QuintoAndar 2021-22 IQAIW symbolizes merging brands. words, original IQA 've improved simply adopting hedonic methodology, without need mix data sources.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_ivar.html","id":null,"dir":"Reference","previous_headings":"","what":"Get IVAR Rent Index — get_rppi_ivar","title":"Get IVAR Rent Index — get_rppi_ivar","text":"Get IVAR Rent Index","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_ivar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get IVAR Rent Index — get_rppi_ivar","text":"","code":"get_rppi_ivar(cached = FALSE, quiet = FALSE, max_retries = 3L)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_ivar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get IVAR Rent Index — get_rppi_ivar","text":"cached Logical. TRUE, loads GitHub cache (recommended) quiet Logical. TRUE, suppresses warnings max_retries Integer. Maximum retry attempts (used data source)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_ivar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get IVAR Rent Index — get_rppi_ivar","text":"Tibble columns: date, name_muni, index, chg, acum12m, name_simplified, abbrev_state","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_ivar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get IVAR Rent Index — get_rppi_ivar","text":"IVAR (Residential Rent Variation Index) repeat-rent index IBRE/FGV, comparing housing unit time. Based rental contracts brokers. Available 4 major cities (São Paulo, Rio, Porto Alegre, Belo Horizonte); national index weighted average. theoretically sound IGP-M rent contracts measures rent prices.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_ivar.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get IVAR Rent Index — get_rppi_ivar","text":"IVAR data available cache source data (FGV) accessible via web scraping. function automatically use cached data source data unavailable.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_ivgr.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the IVGR Sales Index — get_rppi_ivgr","title":"Get the IVGR Sales Index — get_rppi_ivgr","text":"Get IVGR Sales Index","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_ivgr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the IVGR Sales Index — get_rppi_ivgr","text":"","code":"get_rppi_ivgr(cached = FALSE, quiet = FALSE, max_retries = 3L)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_ivgr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the IVGR Sales Index — get_rppi_ivgr","text":"cached Logical. TRUE, loads GitHub cache quiet Logical. TRUE, suppresses warnings max_retries Integer. Maximum retry attempts downloads","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_ivgr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the IVGR Sales Index — get_rppi_ivgr","text":"Tibble columns: date, name_geo, index, chg, acum12m","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_ivgr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the IVGR Sales Index — get_rppi_ivgr","text":"IVG-R (Residential Real Estate Collateral Value Index) monthly median sales index based bank appraisals, calculated Brazilian Central Bank (BCB series 21340). index estimates long-run trends home prices using Hodrick-Prescott filter (lambda=3600) applied major metropolitan regions. Note: Median indices suffer composition bias account quality changes across housing stock.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_ivgr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get the IVGR Sales Index — get_rppi_ivgr","text":"Banco Central Brasil (2018) \"Indice de Valores de Garantia de Imoveis Residenciais Financiados (IVG-R). Seminario de Metodologia IBGE.\"","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_secovi_sp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Secovi-SP Rent Index — get_rppi_secovi_sp","title":"Get Secovi-SP Rent Index — get_rppi_secovi_sp","text":"Get Secovi-SP Rent Index","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_secovi_sp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Secovi-SP Rent Index — get_rppi_secovi_sp","text":"","code":"get_rppi_secovi_sp(cached = FALSE, quiet = FALSE, max_retries = 3L)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_secovi_sp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Secovi-SP Rent Index — get_rppi_secovi_sp","text":"cached Logical. TRUE, loads GitHub cache quiet Logical. TRUE, suppresses warnings max_retries Integer. Maximum retry attempts","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_secovi_sp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Secovi-SP Rent Index — get_rppi_secovi_sp","text":"Tibble columns: date, name_muni, index, chg, acum12m","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_rppi_secovi_sp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Secovi-SP Rent Index — get_rppi_secovi_sp","text":"Secovi-SP rent price index São Paulo. Wrapper around get_secovi() extracts formats rent price data RPPI.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_secovi.html","id":null,"dir":"Reference","previous_headings":"","what":"Import data from Secovi-SP — get_secovi","title":"Import data from Secovi-SP — get_secovi","text":"Import data Secovi-SP","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_secovi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import data from Secovi-SP — get_secovi","text":"","code":"get_secovi(table = \"all\", cached = FALSE, quiet = FALSE, max_retries = 3L)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_secovi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import data from Secovi-SP — get_secovi","text":"table Character. One 'condo', 'rent', 'launch', 'sale' '' (default). cached Logical. TRUE, attempts load data package cache using unified dataset architecture. quiet Logical. TRUE, suppresses progress messages warnings. FALSE (default), provides detailed progress reporting. max_retries Integer. Maximum number retry attempts failed web scraping operations. Defaults 3.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_secovi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import data from Secovi-SP — get_secovi","text":"tibble SECOVI-SP real estate data. return includes metadata attributes: download_info List download statistics source Data source used (web cache) download_time Timestamp download","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_secovi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import data from Secovi-SP — get_secovi","text":"function scrapes real estate data SECOVI-SP website including condominium fees, rental market data, launches, sales information. function handles parallel processing data cleaning maintaining progress reporting.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_secovi.html","id":"deprecation","dir":"Reference","previous_headings":"","what":"Deprecation","title":"Import data from Secovi-SP — get_secovi","text":"function deprecated. Use get_dataset(\"secovi\") instead. Download clean real estate information Sao Paulo (SP) made available SECOVI-SP modern error handling, progress reporting, robust web scraping capabilities.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_secovi.html","id":"progress-reporting","dir":"Reference","previous_headings":"","what":"Progress Reporting","title":"Import data from Secovi-SP — get_secovi","text":"quiet = FALSE, function provides detailed progress information including web scraping status data processing steps, even parallel operations.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_secovi.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error Handling","title":"Import data from Secovi-SP — get_secovi","text":"function includes retry logic failed web scraping attempts robust error handling parallel data processing operations.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/get_secovi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import data from Secovi-SP — get_secovi","text":"","code":"if (FALSE) { # \\dontrun{ # Download all available data (with progress) secovi <- get_secovi(quiet = FALSE)  # Download only a specific series sales <- get_secovi(\"sale\")  # Use cached data for faster access cached_data <- get_secovi(cached = TRUE)  # Check download metadata attr(sales, \"download_info\") } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/harmonize_fipezap_for_stacking.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize FipeZap Data for Stacking — harmonize_fipezap_for_stacking","title":"Harmonize FipeZap Data for Stacking — harmonize_fipezap_for_stacking","text":"Harmonize FipeZap Data Stacking","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/harmonize_fipezap_for_stacking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonize FipeZap Data for Stacking — harmonize_fipezap_for_stacking","text":"","code":"harmonize_fipezap_for_stacking(dat, transaction_type = NULL)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/harmonize_fipezap_for_stacking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize FipeZap Data for Stacking — harmonize_fipezap_for_stacking","text":"dat FipeZap data tibble transaction_type \"sale\" \"rent\" filter stacking","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/harmonize_fipezap_for_stacking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonize FipeZap Data for Stacking — harmonize_fipezap_for_stacking","text":"Harmonized tibble standard RPPI columns","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_bcb_realestate_robust.html","id":null,"dir":"Reference","previous_headings":"","what":"Import BCB Real Estate Data with Robust Error Handling — import_bcb_realestate_robust","title":"Import BCB Real Estate Data with Robust Error Handling — import_bcb_realestate_robust","text":"Modern version import_bcb_realestate retry logic.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_bcb_realestate_robust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import BCB Real Estate Data with Robust Error Handling — import_bcb_realestate_robust","text":"","code":"import_bcb_realestate_robust(quiet, max_retries)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_bcb_realestate_robust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import BCB Real Estate Data with Robust Error Handling — import_bcb_realestate_robust","text":"quiet Logical controlling messages max_retries Maximum number retry attempts","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_bcb_realestate_robust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import BCB Real Estate Data with Robust Error Handling — import_bcb_realestate_robust","text":"Raw BCB data error","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_bcb_series_robust.html","id":null,"dir":"Reference","previous_headings":"","what":"Import BCB Series Data with Robust Error Handling — import_bcb_series_robust","title":"Import BCB Series Data with Robust Error Handling — import_bcb_series_robust","text":"Internal function download BCB series data retry logic.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_bcb_series_robust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import BCB Series Data with Robust Error Handling — import_bcb_series_robust","text":"","code":"import_bcb_series_robust(codes_bcb, date_start, quiet, max_retries, ...)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_bcb_series_robust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import BCB Series Data with Robust Error Handling — import_bcb_series_robust","text":"codes_bcb Vector BCB series codes date_start Start date series quiet Logical controlling messages max_retries Maximum number retry attempts ... Additional arguments passed rbcb::get_series","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_bcb_series_robust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import BCB Series Data with Robust Error Handling — import_bcb_series_robust","text":"Downloaded BCB API data","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cached.html","id":null,"dir":"Reference","previous_headings":"","what":"Cache Management Utilities — import_cached","title":"Cache Management Utilities — import_cached","text":"Internal functions managing package data cache, including loading cached datasets handling cache invalidation strategies. Import Cached Dataset","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cached.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cache Management Utilities — import_cached","text":"","code":"import_cached(   dataset_name,   cache_dir = \"cached_data\",   format = \"auto\",   quiet = FALSE )"},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cached.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cache Management Utilities — import_cached","text":"dataset_name Character. Name cached dataset (without extension) cache_dir Character. Path cache directory (default: \"cached_data\") format Character. File format (\"auto\", \"rds\", \"csv\"). \"auto\", try RDS first, compressed CSV. quiet Logical. Suppress informational messages (default: FALSE)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cached.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cache Management Utilities — import_cached","text":"Dataset tibble list, depending original structure","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cached.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cache Management Utilities — import_cached","text":"Load dataset package's cached data directory automatic format detection error handling.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cached.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cache Management Utilities — import_cached","text":"","code":"if (FALSE) { # \\dontrun{ # Load ABECIP data from cache abecip_data <- import_cached(\"abecip\")  # Load with specific format bcb_data <- import_cached(\"bcb_realestate\", format = \"csv\") } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cbic_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Excel file from CBIC with error handling — import_cbic_file","title":"Import Excel file from CBIC with error handling — import_cbic_file","text":"Import Excel file CBIC error handling","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cbic_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Excel file from CBIC with error handling — import_cbic_file","text":"","code":"import_cbic_file(url, dest_dir = tempdir(), delay = 1)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cbic_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Excel file from CBIC with error handling — import_cbic_file","text":"url Character vector length 1. URL Excel file download dest_dir Character vector length 1. Destination directory delay Numeric vector length 1. Delay requests seconds","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cbic_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Excel file from CBIC with error handling — import_cbic_file","text":"Character vector length 1. Path downloaded file NULL failed","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cbic_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Excel file from CBIC with error handling — import_cbic_file","text":"","code":"if (FALSE) { # \\dontrun{ url <- \"http://www.cbicdados.com.br/media/anexos/example.xlsx\" file_path <- import_cbic_file(url) } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cbic_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Import all Excel files for a specific CBIC material — import_cbic_files","title":"Import all Excel files for a specific CBIC material — import_cbic_files","text":"Import Excel files specific CBIC material","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cbic_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import all Excel files for a specific CBIC material — import_cbic_files","text":"","code":"import_cbic_files(file_params, dest_dir = tempdir(), quiet = FALSE)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cbic_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import all Excel files for a specific CBIC material — import_cbic_files","text":"file_params tibble. Output import_cbic_material_links() dest_dir Character vector length 1. Destination directory","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cbic_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import all Excel files for a specific CBIC material — import_cbic_files","text":"tibble download results including success status file paths","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cbic_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import all Excel files for a specific CBIC material — import_cbic_files","text":"","code":"if (FALSE) { # \\dontrun{ files <- import_cbic_material_links(cement_url) results <- import_cbic_files(files) } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cbic_material_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Excel file links for a specific CBIC material — import_cbic_material_links","title":"Import Excel file links for a specific CBIC material — import_cbic_material_links","text":"Import Excel file links specific CBIC material","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cbic_material_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Excel file links for a specific CBIC material — import_cbic_material_links","text":"","code":"import_cbic_material_links(material_url, quiet = FALSE)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cbic_material_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Excel file links for a specific CBIC material — import_cbic_material_links","text":"material_url Character vector length 1. URL material page","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cbic_material_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Excel file links for a specific CBIC material — import_cbic_material_links","text":"tibble columns: title Character. File title/description link Character. Direct URL Excel file","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cbic_material_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Excel file links for a specific CBIC material — import_cbic_material_links","text":"","code":"if (FALSE) { # \\dontrun{ cement_url <- \"http://www.cbicdados.com.br/menu/materiais-de-construcao/cimento\" files <- import_cbic_material_links(cement_url) } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cbic_materials.html","id":null,"dir":"Reference","previous_headings":"","what":"Import CBIC materials metadata from main page — import_cbic_materials","title":"Import CBIC materials metadata from main page — import_cbic_materials","text":"Scrapes main CBIC materials page extract information available construction materials data.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cbic_materials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import CBIC materials metadata from main page — import_cbic_materials","text":"","code":"import_cbic_materials(quiet = FALSE)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cbic_materials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import CBIC materials metadata from main page — import_cbic_materials","text":"tibble columns: title Character. Material name description Character. Material description link Character. URL material-specific page","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_cbic_materials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import CBIC materials metadata from main page — import_cbic_materials","text":"","code":"if (FALSE) { # \\dontrun{ materials <- import_cbic_materials() } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_secovi_robust.html","id":null,"dir":"Reference","previous_headings":"","what":"Import SECOVI Data with Robust Error Handling — import_secovi_robust","title":"Import SECOVI Data with Robust Error Handling — import_secovi_robust","text":"Modern version import_secovi retry logic progress reporting.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_secovi_robust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import SECOVI Data with Robust Error Handling — import_secovi_robust","text":"","code":"import_secovi_robust(table, quiet, max_retries)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_secovi_robust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import SECOVI Data with Robust Error Handling — import_secovi_robust","text":"table Data table import quiet Logical controlling messages max_retries Maximum number retry attempts","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/import_secovi_robust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import SECOVI Data with Robust Error Handling — import_secovi_robust","text":"List scraped data tables","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/is_debug_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Debug Mode is Enabled — is_debug_mode","title":"Check if Debug Mode is Enabled — is_debug_mode","text":"Checks whether debug mode enabled detailed package messaging. Debug mode can enabled via environment variable package option.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/is_debug_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Debug Mode is Enabled — is_debug_mode","text":"","code":"is_debug_mode()"},{"path":"https://viniciusoike.github.io/realestatebr/reference/is_debug_mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Debug Mode is Enabled — is_debug_mode","text":"Logical. TRUE debug mode enabled, FALSE otherwise.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/is_debug_mode.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if Debug Mode is Enabled — is_debug_mode","text":"Debug mode can enabled two ways (checked order precedence): Environment variable: REALESTATEBR_DEBUG=TRUE Package option: options(realestatebr.debug = TRUE) debug mode enabled, detailed processing messages shown, including file--file progress, type detection, intermediate steps. useful development troubleshooting.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/is_debug_mode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if Debug Mode is Enabled — is_debug_mode","text":"","code":"if (FALSE) { # \\dontrun{ # Check current debug mode status is_debug_mode()  # Enable debug mode via option options(realestatebr.debug = TRUE) is_debug_mode()  # Returns TRUE  # Enable debug mode via environment variable Sys.setenv(REALESTATEBR_DEBUG = \"TRUE\") is_debug_mode()  # Returns TRUE } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/list_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"List Available Datasets — list_datasets","title":"List Available Datasets — list_datasets","text":"Returns information available datasets realestatebr package. provides unified interface discover data sources characteristics.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/list_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Available Datasets — list_datasets","text":"","code":"list_datasets(   category = NULL,   source = NULL,   geography = NULL,   include_hidden = FALSE )"},{"path":"https://viniciusoike.github.io/realestatebr/reference/list_datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Available Datasets — list_datasets","text":"category Optional. Filter datasets category. Common categories include: \"indicators\", \"prices\", \"credit\", \"stocks\". Leave NULL see datasets. source Optional. Filter data source (e.g., \"BCB\", \"FIPE\", \"ABRAINC\"). geography Optional. Filter geographic coverage (e.g., \"Brazil\", \"São Paulo\"). include_hidden Logical. TRUE, includes datasets status=\"hidden\". Default FALSE show available datasets.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/list_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Available Datasets — list_datasets","text":"tibble columns: name Dataset identifier use get_dataset() title Human-readable name English title_pt Human-readable name Portuguese description Brief description dataset source Data source organization geography Geographic coverage frequency Update frequency coverage Time period coverage categories Number categories/subtables available_tables Names available tables (multi-table datasets) data_type Type data structure (tibble/list) legacy_function Original function name backward compatibility","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/reference/list_datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Available Datasets — list_datasets","text":"","code":"if (FALSE) { # \\dontrun{ # List all available datasets datasets <- list_datasets()  # Filter by data source bcb_data <- list_datasets(source = \"BCB\")  # Filter by geography sao_paulo_data <- list_datasets(geography = \"São Paulo\")  # View available tables for multi-table datasets View(list_datasets()$available_tables)  # Get specific table from multi-table dataset abecip_sbpe <- get_dataset(\"abecip\", table = \"sbpe\") } # }"},{"path":"https://viniciusoike.github.io/realestatebr/reference/load_dataset_registry.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Dataset Registry from YAML — load_dataset_registry","title":"Load Dataset Registry from YAML — load_dataset_registry","text":"Internal function load dataset registry inst/extdata/datasets.yaml file.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/load_dataset_registry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Dataset Registry from YAML — load_dataset_registry","text":"","code":"load_dataset_registry()"},{"path":"https://viniciusoike.github.io/realestatebr/reference/load_dataset_registry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Dataset Registry from YAML — load_dataset_registry","text":"list containing parsed YAML registry","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/load_file_by_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Load File by Extension — load_file_by_extension","title":"Load File by Extension — load_file_by_extension","text":"Load file using appropriate method based extension","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/load_file_by_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load File by Extension — load_file_by_extension","text":"","code":"load_file_by_extension(file_path, extension, quiet)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/load_file_by_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load File by Extension — load_file_by_extension","text":"file_path Character. Full path file extension Character. File extension quiet Logical. Suppress messages","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/load_file_by_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load File by Extension — load_file_by_extension","text":"Loaded dataset","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/load_specific_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Specific Format — load_specific_format","title":"Load Specific Format — load_specific_format","text":"Load dataset specific file format","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/load_specific_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Specific Format — load_specific_format","text":"","code":"load_specific_format(dataset_name, cache_path, format, quiet)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/load_specific_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Specific Format — load_specific_format","text":"dataset_name Character. Dataset name cache_path Character. Cache directory path format Character. File format quiet Logical. Suppress messages","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/load_specific_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Specific Format — load_specific_format","text":"Dataset NULL","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/process_bis_detailed_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process BIS Detailed Data — process_bis_detailed_data","title":"Process BIS Detailed Data — process_bis_detailed_data","text":"Internal function process BIS detailed Excel data.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/process_bis_detailed_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process BIS Detailed Data — process_bis_detailed_data","text":"","code":"process_bis_detailed_data(temp_path, quiet)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/process_bis_detailed_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process BIS Detailed Data — process_bis_detailed_data","text":"temp_path Path downloaded Excel file quiet Logical controlling messages","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/process_bis_detailed_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process BIS Detailed Data — process_bis_detailed_data","text":"Processed BIS detailed data named list","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/process_bis_selected_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process BIS Selected Data — process_bis_selected_data","title":"Process BIS Selected Data — process_bis_selected_data","text":"Internal function process BIS selected Excel data.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/process_bis_selected_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process BIS Selected Data — process_bis_selected_data","text":"","code":"process_bis_selected_data(temp_path, quiet)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/process_bis_selected_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process BIS Selected Data — process_bis_selected_data","text":"temp_path Path downloaded Excel file quiet Logical controlling messages","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/process_bis_selected_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process BIS Selected Data — process_bis_selected_data","text":"Processed BIS selected data","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/process_sbpe_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process SBPE Data — process_sbpe_data","title":"Process SBPE Data — process_sbpe_data","text":"Internal helper function clean process SBPE data tables.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/process_sbpe_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process SBPE Data — process_sbpe_data","text":"","code":"process_sbpe_data(df)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/process_sbpe_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process SBPE Data — process_sbpe_data","text":"df Raw data frame Excel import","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/process_sbpe_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process SBPE Data — process_sbpe_data","text":"Cleaned tibble","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/realestatebr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"realestatebr: Import Brazilian Real Estate Data into R — realestatebr-package","title":"realestatebr: Import Brazilian Real Estate Data into R — realestatebr-package","text":"package offers suite functions import real estate data market reports convenient 'tidy' format R.","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/reference/registry_to_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Registry to Tibble — registry_to_tibble","title":"Convert Registry to Tibble — registry_to_tibble","text":"Internal function convert nested YAML registry structure flat tibble suitable display filtering.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/registry_to_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Registry to Tibble — registry_to_tibble","text":"","code":"registry_to_tibble(registry)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/registry_to_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Registry to Tibble — registry_to_tibble","text":"registry List containing parsed YAML registry","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/registry_to_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Registry to Tibble — registry_to_tibble","text":"tibble dataset information","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/rppi-helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"RPPI Helper Functions — rppi-helpers","title":"RPPI Helper Functions — rppi-helpers","text":"Internal helper functions reduce code duplication RPPI functions. exported used internally.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/scrape_registro_imoveis_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Scrape Download Links from Registro de Imoveis Website — scrape_registro_imoveis_links","title":"Scrape Download Links from Registro de Imoveis Website — scrape_registro_imoveis_links","text":"Internal function scrape Excel file download links retry logic.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/scrape_registro_imoveis_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scrape Download Links from Registro de Imoveis Website — scrape_registro_imoveis_links","text":"","code":"scrape_registro_imoveis_links(quiet, max_retries)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/scrape_registro_imoveis_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scrape Download Links from Registro de Imoveis Website — scrape_registro_imoveis_links","text":"quiet Logical controlling messages max_retries Maximum number retry attempts","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/scrape_registro_imoveis_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scrape Download Links from Registro de Imoveis Website — scrape_registro_imoveis_links","text":"Character vector download links NULL failed","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/show_import_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Dataset Import Message — show_import_message","title":"Show Dataset Import Message — show_import_message","text":"Display informative message table imported available","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/show_import_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Dataset Import Message — show_import_message","text":"","code":"show_import_message(name, table_info)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/show_import_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show Dataset Import Message — show_import_message","text":"name Dataset name table_info Result validate_and_resolve_table()","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/standardize_rppi_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize RPPI Structure — standardize_rppi_structure","title":"Standardize RPPI Structure — standardize_rppi_structure","text":"Standardize RPPI Structure","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/standardize_rppi_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize RPPI Structure — standardize_rppi_structure","text":"","code":"standardize_rppi_structure(dat, source_name)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/standardize_rppi_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize RPPI Structure — standardize_rppi_structure","text":"dat Input tibble RPPI source source_name Name add source column","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/standardize_rppi_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize RPPI Structure — standardize_rppi_structure","text":"Standardized tibble consistent columns","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/supports_table_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Legacy Function Supports table=","title":"Check if Legacy Function Supports table=","text":"Check Legacy Function Supports table=\"\"","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/supports_table_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Legacy Function Supports table=","text":"","code":"supports_table_all(func_name)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/suppress_external_warnings.html","id":null,"dir":"Reference","previous_headings":"","what":"Suppress external package warnings and messages — suppress_external_warnings","title":"Suppress external package warnings and messages — suppress_external_warnings","text":"Suppress external package warnings messages","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/suppress_external_warnings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suppress external package warnings and messages — suppress_external_warnings","text":"","code":"suppress_external_warnings(expr, warn_level = \"user\")"},{"path":"https://viniciusoike.github.io/realestatebr/reference/suppress_external_warnings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suppress external package warnings and messages — suppress_external_warnings","text":"expr Expression evaluate suppressed warnings warn_level Current warning level setting","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/test_encoding_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Test function to verify Unicode escapes work correctly — test_encoding_patterns","title":"Test function to verify Unicode escapes work correctly — test_encoding_patterns","text":"Test function verify Unicode escapes work correctly","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/test_encoding_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test function to verify Unicode escapes work correctly — test_encoding_patterns","text":"","code":"test_encoding_patterns()"},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_column_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate Column Names — translate_column_names","title":"Translate Column Names — translate_column_names","text":"Translate Column Names","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_column_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate Column Names — translate_column_names","text":"","code":"translate_column_names(column_names, dataset_name)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_column_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate Column Names — translate_column_names","text":"column_names Vector column names translate dataset_name Dataset name context-specific translations","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_column_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate Column Names — translate_column_names","text":"Vector translated column names","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_column_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate Column Values — translate_column_values","title":"Translate Column Values — translate_column_values","text":"Translate values within specific columns (e.g., state names, categories)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_column_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate Column Values — translate_column_values","text":"","code":"translate_column_values(df, dataset_name)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_column_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate Column Values — translate_column_values","text":"df Data frame potentially translatable values dataset_name Dataset name context","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_column_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate Column Values — translate_column_values","text":"Data frame translated values","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Translation Utilities for Brazilian Real Estate Data — translate_dataset","title":"Translation Utilities for Brazilian Real Estate Data — translate_dataset","text":"file contains functions translating Portuguese column names values English following geobr package patterns real estate domain conventions. Translate Dataset Column Names Values","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translation Utilities for Brazilian Real Estate Data — translate_dataset","text":"","code":"translate_dataset(data, dataset_name)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translation Utilities for Brazilian Real Estate Data — translate_dataset","text":"data Dataset (tibble list tibbles) dataset_name Name dataset context-specific translations","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translation Utilities for Brazilian Real Estate Data — translate_dataset","text":"Translated dataset English column names standardized values","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translation Utilities for Brazilian Real Estate Data — translate_dataset","text":"Apply standard Portuguese English translations given dataset. Follows geobr package conventions real estate domain standards.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_property_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate Property Types — translate_property_types","title":"Translate Property Types — translate_property_types","text":"Translate Property Types","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_property_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate Property Types — translate_property_types","text":"","code":"translate_property_types(property_types)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_property_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate Property Types — translate_property_types","text":"property_types Vector property type names","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_property_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate Property Types — translate_property_types","text":"Vector translated property types","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_region_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate Region Names — translate_region_names","title":"Translate Region Names — translate_region_names","text":"Translate Region Names","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_region_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate Region Names — translate_region_names","text":"","code":"translate_region_names(region_names)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_region_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate Region Names — translate_region_names","text":"region_names Vector region names","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_region_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate Region Names — translate_region_names","text":"Vector translated region names","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_state_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate State Names — translate_state_names","title":"Translate State Names — translate_state_names","text":"Translate State Names","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_state_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate State Names — translate_state_names","text":"","code":"translate_state_names(state_names)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_state_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate State Names — translate_state_names","text":"state_names Vector state names Portuguese","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_state_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate State Names — translate_state_names","text":"Vector state names English","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate Individual Tibble — translate_tibble","title":"Translate Individual Tibble — translate_tibble","text":"Translate Individual Tibble","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate Individual Tibble — translate_tibble","text":"","code":"translate_tibble(df, dataset_name)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate Individual Tibble — translate_tibble","text":"df Data frame translate dataset_name Dataset name context","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/translate_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate Individual Tibble — translate_tibble","text":"Translated data frame","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/try_load_formats.html","id":null,"dir":"Reference","previous_headings":"","what":"Try Loading Different File Formats — try_load_formats","title":"Try Loading Different File Formats — try_load_formats","text":"Internal function attempt loading dataset different file formats order preference: RDS, CSV.gz, CSV","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/try_load_formats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Try Loading Different File Formats — try_load_formats","text":"","code":"try_load_formats(dataset_name, cache_path, quiet)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/try_load_formats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Try Loading Different File Formats — try_load_formats","text":"dataset_name Character. Dataset name cache_path Character. Path cache directory quiet Logical. Suppress messages","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/try_load_formats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Try Loading Different File Formats — try_load_formats","text":"Dataset NULL found","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/validate_abecip_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Abecip Data — validate_abecip_data","title":"Validate Abecip Data — validate_abecip_data","text":"Internal helper function validate downloaded Abecip data.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/validate_abecip_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Abecip Data — validate_abecip_data","text":"","code":"validate_abecip_data(data, type)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/validate_abecip_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Abecip Data — validate_abecip_data","text":"data Data frame validate type Type data (\"sbpe\" \"units\")","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/validate_abecip_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Abecip Data — validate_abecip_data","text":"NULL (validates errors)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/validate_and_resolve_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate and Resolve Table Parameter — validate_and_resolve_table","title":"Validate and Resolve Table Parameter — validate_and_resolve_table","text":"Validates table parameter available tables resolves default table","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/validate_and_resolve_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate and Resolve Table Parameter — validate_and_resolve_table","text":"","code":"validate_and_resolve_table(name, dataset_info, table = NULL)"},{"path":"https://viniciusoike.github.io/realestatebr/reference/validate_and_resolve_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate and Resolve Table Parameter — validate_and_resolve_table","text":"name Dataset name dataset_info Dataset metadata registry table User-specified table name (can NULL)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/validate_and_resolve_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate and Resolve Table Parameter — validate_and_resolve_table","text":"List resolved_table, available_tables, is_default","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/validate_cached_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Cached Dataset — validate_cached_dataset","title":"Validate Cached Dataset — validate_cached_dataset","text":"Check cached dataset exists valid","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/validate_cached_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Cached Dataset — validate_cached_dataset","text":"","code":"validate_cached_dataset(dataset_name, cache_dir = \"cached_data\")"},{"path":"https://viniciusoike.github.io/realestatebr/reference/validate_cached_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Cached Dataset — validate_cached_dataset","text":"dataset_name Character. Name dataset validate cache_dir Character. Cache directory","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/validate_cached_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Cached Dataset — validate_cached_dataset","text":"List validation results","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/warn_if_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional warning based on warning level — warn_if_level","title":"Conditional warning based on warning level — warn_if_level","text":"Conditional warning based warning level","code":""},{"path":"https://viniciusoike.github.io/realestatebr/reference/warn_if_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional warning based on warning level — warn_if_level","text":"","code":"warn_if_level(message, level = \"user\", warn_level = \"user\")"},{"path":"https://viniciusoike.github.io/realestatebr/reference/warn_if_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional warning based on warning level — warn_if_level","text":"message Warning message level Warning level: \"user\" (default), \"dev\" (development ) warn_level Current warning level setting","code":""},{"path":[]},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"secovi-default-table-fix-0-5-1","dir":"Changelog","previous_headings":"Bug Fixes","what":"SECOVI Default Table Fix","title":"realestatebr 0.5.1","text":"Fixed SECOVI dataset return categories default instead “condo” Problem: get_dataset(\"secovi\") returning “condo” category (1,939 rows) instead categories (9,398 rows). caused test failures launch/rent/sale tables. Root Cause: table parameter specified, code defaulted first category alphabetically (“condo”), rather fetching categories. Solution: Added default_table configuration support datasets.yaml Updated validate_and_resolve_table() check default_table setting Set SECOVI’s default_table: \"\" registry Regenerated cache 4 categories Impact: Cache size: 12KB → 55KB (includes categories) Data completeness: 1,939 → 9,398 rows Categories: condo (1,939), launch (780), rent (2,779), sale (3,900)","code":"# Now returns all categories by default get_dataset(\"secovi\")  # → 9,398 rows, 4 categories ✅  # Specific tables still work correctly get_dataset(\"secovi\", \"launch\")  # → 780 rows get_dataset(\"secovi\", \"rent\")    # → 2,779 rows get_dataset(\"secovi\", \"sale\")    # → 3,900 rows"},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"test-infrastructure-improvements-0-5-1","dir":"Changelog","previous_headings":"Bug Fixes","what":"Test Infrastructure Improvements","title":"realestatebr 0.5.1","text":"Updated test suite use devtools::load_all() instead library() ensure testing development version Added comprehensive pre-release test suite (tests/comprehensive_check_v0.5.qmd) Added test result documentation (tests/TEST_RESULTS_SUMMARY.md, tests/QUICK_SUMMARY.md)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"pipeline-improvements-0-5-1","dir":"Changelog","previous_headings":"Bug Fixes","what":"Pipeline Improvements","title":"realestatebr 0.5.1","text":"Updated _targets.R always load development version consistency Ensures targets pipeline uses latest code cache regeneration","code":""},{"path":[]},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"major-architectural-change-0-5-0","dir":"Changelog","previous_headings":"BREAKING CHANGES: User-Level Caching Architecture","what":"Major Architectural Change","title":"realestatebr 0.5.0","text":"Version 0.5.0 introduces user-level caching, removing bundled datasets package comply CRAN’s 5MB size limit. BREAKING CHANGE affects datasets accessed.","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"what-changed-0-5-0","dir":"Changelog","previous_headings":"BREAKING CHANGES: User-Level Caching Architecture","what":"What Changed","title":"realestatebr 0.5.0","text":"Removed: cached datasets inst/cached_data/ (previously ~25MB) Added: User-level cache directory ~/.local/share/realestatebr/ (Linux/Mac) %LOCALAPPDATA%/realestatebr/Cache/ (Windows) Added: GitHub Releases integration pre-processed datasets Changed: source=\"cache\" now refers user cache, package cache Changed: source=\"github\" now downloads GitHub releases, package files","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"new-cache-behavior-0-5-0","dir":"Changelog","previous_headings":"BREAKING CHANGES: User-Level Caching Architecture","what":"New Cache Behavior","title":"realestatebr 0.5.0","text":"","code":"# First use: downloads from GitHub releases to user cache data <- get_dataset(\"abecip\")  # Downloads once  # Subsequent uses: loads from user cache (instant, offline) data <- get_dataset(\"abecip\")  # Loads from ~/.local/share/realestatebr/  # Force fresh download from original source data <- get_dataset(\"abecip\", source = \"fresh\")  # Downloads and caches  # Explicit source selection data <- get_dataset(\"abecip\", source = \"cache\")   # User cache only data <- get_dataset(\"abecip\", source = \"github\")  # GitHub releases only"},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"auto-fallback-strategy-source--auto-default-0-5-0","dir":"Changelog","previous_headings":"BREAKING CHANGES: User-Level Caching Architecture","what":"Auto Fallback Strategy (source = “auto”, default)","title":"realestatebr 0.5.0","text":"User Cache: Check ~/.local/share/realestatebr/ (instant, offline) GitHub Releases: Download pre-processed data (requires piggyback package) Fresh Download: Download original source (saves user cache)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"new-dependencies-0-5-0","dir":"Changelog","previous_headings":"BREAKING CHANGES: User-Level Caching Architecture","what":"New Dependencies","title":"realestatebr 0.5.0","text":"Added: rappdirs (Imports) - Cross-platform user cache directory support Added: piggyback (Suggests) - GitHub releases download support","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"new-functions-0-5-0","dir":"Changelog","previous_headings":"BREAKING CHANGES: User-Level Caching Architecture","what":"New Functions","title":"realestatebr 0.5.0","text":"get_user_cache_dir(): Get path user cache directory list_cached_files(): List cached datasets clear_user_cache(): Remove cached datasets is_cached(): Check dataset cache list_github_assets(): List available datasets GitHub releases download_from_github_release(): Download specific dataset releases update_cache_from_github(): Update cached datasets GitHub is_cache_up_to_date(): Compare local vs GitHub cache timestamps","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"for-users-0-5-0","dir":"Changelog","previous_headings":"BREAKING CHANGES: User-Level Caching Architecture > Migration Guide","what":"For Users","title":"realestatebr 0.5.0","text":"","code":"# Install updated package install.packages(\"realestatebr\")  # or devtools::install_github()  # Install piggyback for GitHub downloads (recommended) install.packages(\"piggyback\")  # First use after update: will download datasets to user cache data <- get_dataset(\"abecip\")  # Check cache location get_user_cache_dir()  # Manage cache list_cached_files()           # See what's cached clear_user_cache(\"abecip\")    # Clear specific dataset clear_user_cache()            # Clear all (with confirmation)"},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"for-package-developers-0-5-0","dir":"Changelog","previous_headings":"BREAKING CHANGES: User-Level Caching Architecture > Migration Guide","what":"For Package Developers","title":"realestatebr 0.5.0","text":"Cached data files now excluded package build via .Rbuildignore Package size reduced ~25MB <5MB (CRAN compliant) inst/cached_data/ kept development/CI excluded distribution GitHub Actions workflow publishes cache releases via data-raw/publish-cache.R","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"benefits-0-5-0","dir":"Changelog","previous_headings":"BREAKING CHANGES: User-Level Caching Architecture","what":"Benefits","title":"realestatebr 0.5.0","text":"✅ CRAN Compliant: Package size now <5MB (25MB) ✅ Faster Installation: Package downloads much smaller ✅ Offline Usage: cached, datasets work offline ✅ User Control: Users manage cache ✅ Weekly Updates: GitHub releases updated automatically CI ✅ Breaking APIs: get_dataset() interface unchanged","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"deprecations-0-5-0","dir":"Changelog","previous_headings":"BREAKING CHANGES: User-Level Caching Architecture","what":"Deprecations","title":"realestatebr 0.5.0","text":"import_cached(): Still works now loads user cache (previously inst/) Old cached=TRUE parameter legacy functions: Still supported uses new cache","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"files-changed-0-5-0","dir":"Changelog","previous_headings":"BREAKING CHANGES: User-Level Caching Architecture","what":"Files Changed","title":"realestatebr 0.5.0","text":"New: R/cache-user.R - User cache management New: R/cache-github.R - GitHub releases integration New: data-raw/publish-cache.R - Upload cache releases Updated: R/get-dataset.R - Refactored cache logic Updated: R/cache.R - Marked deprecated (kept compatibility) Updated: .Rbuildignore - Exclude inst/cached_data/ files Updated: DESCRIPTION - Added rappdirs piggyback dependencies","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"critical-pipeline-functionality-0-5-0","dir":"Changelog","previous_headings":"Targets Pipeline Fixes","what":"Critical Pipeline Functionality","title":"realestatebr 0.5.0","text":"Fixed: Targets pipeline now fully functional automated data updates Changed source=\"fresh\" source=\"github\" manually-updated datasets datasets API/download capability require manual updates Previously tried access non-existent fgv_data ire objects R/sysdata.rda Now provides clear error messages fresh downloads attempted cached=FALSE","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"enhanced-dataset-registry-0-5-0","dir":"Changelog","previous_headings":"Targets Pipeline Fixes","what":"Enhanced Dataset Registry","title":"realestatebr 0.5.0","text":"Added: manual_update flag datasets.yaml FGV IBRE NRE-IRE Added: update_notes field documenting fresh downloads aren’t available Improved: Clear documentation _targets.R explaining data source choices","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"files-changed-0-5-0-1","dir":"Changelog","previous_headings":"Targets Pipeline Fixes","what":"Files Changed","title":"realestatebr 0.5.0","text":"_targets.R: Updated fetch_dataset() support source parameter; FGV NRE-IRE now use source=\"github\" R/get_fgv_ibre.R: Removed broken internal data fallback; added clear error fresh downloads R/get_nre_ire.R: Removed broken internal data fallback; added clear error fresh downloads inst/extdata/datasets.yaml: Added manual update flags notes","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"property-records-simplification-commiteab0ca-0-5-0","dir":"Changelog","previous_headings":"Bug Fixes from Recent Commits","what":"Property Records Simplification (Commit 9eab0ca)","title":"realestatebr 0.5.0","text":"Refactored: Major simplification get_property_records.R (14% code reduction: 780→673 lines) Removed: Deprecated functions get_ri_capitals() get_ri_aggregates() warning messages Removed: Unused metadata attributes (source, download_time, download_info) never used Simplified: Documentation internal function (removed verbose examples sections) Improved: scrape_registro_imoveis_links() better connection cleanup reduced complexity","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"bcb-real-estate-0-5-0","dir":"Changelog","previous_headings":"Bug Fixes from Recent Commits > BCB Dataset Critical Fixes (Commit bb580c8)","what":"BCB Real Estate","title":"realestatebr 0.5.0","text":"Fixed: CLI message serialization error targets pipeline Fixed: Compute nrow() CLI interpolation avoid closure issues","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"bcb-series---graceful-degradation-critical-0-5-0","dir":"Changelog","previous_headings":"Bug Fixes from Recent Commits > BCB Dataset Critical Fixes (Commit bb580c8)","what":"BCB Series - Graceful Degradation (CRITICAL)","title":"realestatebr 0.5.0","text":"Fixed: Replaced batch download individual series downloads better reliability Fixed: Now returns successful series even fail (e.g., 14/15 instead 0/15) Added: Per-series retry logic exponential backoff using purrr::possibly() pattern Added: Clear warnings showing series failed Restored: Commented-table filtering logic - now filters bcb_category table specified Improved: Metadata-driven approach using bcb_metadata dynamically (now downloads 140 series, just 15)","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"get-dataset-infrastructure-0-5-0","dir":"Changelog","previous_headings":"Bug Fixes from Recent Commits > BCB Dataset Critical Fixes (Commit bb580c8)","what":"Get Dataset Infrastructure","title":"realestatebr 0.5.0","text":"Fixed: BCB Real Estate table filtering category get-dataset.R Fixed: BCB Series table filtering bcb_category Added: Support table=\"\" validate_and_resolve_table() function Fixed: Proper mapping user-facing table names internal Portuguese categories","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"registry-and-tests-0-5-0","dir":"Changelog","previous_headings":"Bug Fixes from Recent Commits > BCB Dataset Critical Fixes (Commit bb580c8)","what":"Registry and Tests","title":"realestatebr 0.5.0","text":"Updated: bcb_series categories datasets.yaml match metadata Added: Missing categories: production, interest-rate, exchange, government, real-estate Added: Integration tests BCB table filtering graceful degradation Result: 97 integration tests now pass","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"cli-message-scoping-0-5-0","dir":"Changelog","previous_headings":"Bug Fixes from Recent Commits > Get Dataset Critical Fixes (Commit ce4768b)","what":"CLI Message Scoping","title":"realestatebr 0.5.0","text":"Fixed: Added .envir = parent.frame() cli::cli_inform() calls cli_user() cli_debug() Fixed: “coerce type ‘closure’ vector type ‘character’” error Affected: Previously failed rppi_bis, property_records, functions using helpers","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"fipezap-data-quality-0-5-0","dir":"Changelog","previous_headings":"Bug Fixes from Recent Commits > Get Dataset Critical Fixes (Commit ce4768b)","what":"FipeZap Data Quality","title":"realestatebr 0.5.0","text":"Fixed: Added standardize_city_names() call binding FipeZap data Fixed: Now correctly shows “Brazil” instead “Índice Fipezap” national index","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"property-records-table-extraction-0-5-0","dir":"Changelog","previous_headings":"Bug Fixes from Recent Commits > Get Dataset Critical Fixes (Commit ce4768b)","what":"Property Records Table Extraction","title":"realestatebr 0.5.0","text":"Fixed: Added special handling nested property_records structure get-dataset.R Fixed: Now returns single tibbles instead nested lists Fixed: tables (capitals, cities, aggregates, transfers) now work correctly","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"testing-infrastructure-0-5-0","dir":"Changelog","previous_headings":"Bug Fixes from Recent Commits > Get Dataset Critical Fixes (Commit ce4768b)","what":"Testing Infrastructure","title":"realestatebr 0.5.0","text":"Added: Comprehensive integration test suite 37 tests covering critical get_dataset() functionality Added: Tests source=\"fresh\" catch real-world failures production Added: GitHub Actions CI workflow weekly integration tests Added: Manual testing script tests/basic_checks.R development","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"note-on-vignettes-0-5-0","dir":"Changelog","previous_headings":"Bug Fixes from Recent Commits","what":"Note on Vignettes","title":"realestatebr 0.5.0","text":"Vignettes temporarily set eval=FALSE faster development TODO: Re-enable vignette evaluation CRAN release","code":""},{"path":[]},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"rppi-individual-table-access-0-4-1","dir":"Changelog","previous_headings":"Bug Fixes","what":"RPPI Individual Table Access","title":"realestatebr 0.4.1","text":"Fixed: get_dataset(\"rppi\", \"ivgr\") individual RPPI tables now work correctly Fixed: Vignette build errors caused RPPI table routing issues Improved: Internal get_rppi() function now supports individual RPPI tables (fipezap, ivgr, igmi, iqa, iqaiw, ivar, secovi_sp) addition stacked tables (sale, rent, )","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"cran-compliance-0-4-1","dir":"Changelog","previous_headings":"Bug Fixes","what":"CRAN Compliance","title":"realestatebr 0.4.1","text":"Fixed: Removed non-ASCII characters R source files (7 files affected) Replaced Portuguese characters Unicode escapes CRAN compliance Files updated: get_bcb_realestate.R, get_cbic.R, get_fgv_ibre.R, get_property_records.R, get_rppi.R, get_rppi_bis.R, get_secovi.R","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"test-suite-0-4-1","dir":"Changelog","previous_headings":"Bug Fixes","what":"Test Suite","title":"realestatebr 0.4.1","text":"Fixed: Updated deprecated category= parameter table= tests/sanity_check.R","code":""},{"path":[]},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"id_-unified-data-interface-0-4-0","dir":"Changelog","previous_headings":"Major Breaking Changes - API Consolidation","what":"🎯 Unified Data Interface","title":"realestatebr 0.4.0","text":"release implements major breaking change consolidates 15+ individual get_*() functions single, unified get_dataset() interface. dramatically simplifies package API maintaining full functionality. BREAKING CHANGE: individual get_*() functions removed: - get_abecip_indicators(), get_abrainc_indicators(), get_rppi(), get_bcb_realestate(), etc. - Migration: Use get_dataset(\"dataset_name\") instead","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"id_-rppi-code-simplification-internal-0-4-0","dir":"Changelog","previous_headings":"Major Breaking Changes - API Consolidation","what":"🔧 RPPI Code Simplification (Internal)","title":"realestatebr 0.4.0","text":"Major refactoring RPPI functions better maintainability: - 67% code reduction: 1579 lines → 519 lines (1060 lines removed) - Bug fix: FipeZap national index now correctly standardized name_muni == \"Brazil\" - Shared helpers: Created rppi-helpers.R common functions eliminate duplication - Removed overhead: Eliminated unused stack parameter, cli_debug calls, metadata attributes - Simplified documentation: Removed verbose sections (Progress Reporting, Error Handling, Examples) internal functions - functions now @keywords internal: get_dataset() user-facing Benefits: - Easier maintain debug - Faster execution (less overhead) - Consistent error handling across indices - Bug fixes apply functions automatically","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"id_-cbic-dataset---partial-release-cement-only-0-4-0","dir":"Changelog","previous_headings":"Major Breaking Changes - API Consolidation","what":"📊 CBIC Dataset - Partial Release (Cement Only)","title":"realestatebr 0.4.0","text":"Note: v0.4.0, CBIC dataset limited cement tables (validated data). Steel PIM tables added v0.4.1. Available v0.4.0: - ✅ cement_monthly_consumption - Monthly cement consumption state - ✅ cement_annual_consumption - Annual cement consumption region - ✅ cement_production_exports - Production, consumption, export data - ✅ cement_monthly_production - Monthly cement production state - ✅ cement_cub_prices - CUB cement prices state Coming v0.4.1: - ⏳ Steel prices production data - ⏳ PIM industrial production indices","code":"# Works in v0.4.0 get_dataset(\"cbic\")  # Default: cement_monthly_consumption get_dataset(\"cbic\", \"cement_cub_prices\")  # Will error with informative message get_dataset(\"cbic\", \"steel_prices\")  # Deferred to v0.4.1"},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"id_️-new-internal-architecture-0-4-0","dir":"Changelog","previous_headings":"Major Breaking Changes - API Consolidation","what":"🏗️ New Internal Architecture","title":"realestatebr 0.4.0","text":"Internal fetch functions: Created 12 new fetch_*() functions @keywords internal Registry-driven: datasets managed centralized inst/extdata/datasets.yaml Hierarchical RPPI: Consolidated rppi rppi_indices single hierarchical structure Consistent parameters: internal functions use standardized table, cached, quiet, max_retries","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"id_-simplified-public-api-0-4-0","dir":"Changelog","previous_headings":"Major Breaking Changes - API Consolidation","what":"📋 Simplified Public API","title":"realestatebr 0.4.0","text":"New unified interface: Removed functions (now internal): - get_abecip_indicators() → get_dataset(\"abecip\") - get_abrainc_indicators() → get_dataset(\"abrainc\") - get_rppi() → get_dataset(\"rppi\") - get_bcb_realestate() → get_dataset(\"bcb_realestate\") - get_bcb_series() → get_dataset(\"bcb_series\") - Plus 10 functions","code":"# Get data from any dataset data <- get_dataset(\"abecip\")               # Default table data <- get_dataset(\"abecip\", table = \"sbpe\")  # Specific table data <- get_dataset(\"rppi\", table = \"fipezap\")  # Hierarchical access  # Discover datasets datasets <- list_datasets() info <- get_dataset_info(\"rppi\")"},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"id_-enhanced-data-access-0-4-0","dir":"Changelog","previous_headings":"Major Breaking Changes - API Consolidation","what":"🔧 Enhanced Data Access","title":"realestatebr 0.4.0","text":"Smart fallback: Auto fallback GitHub cache → fresh download Source control: Explicit source = \"cache\"/\"github\"/\"fresh\" options Better error messages: Detailed troubleshooting information Metadata preservation: data includes source tracking download info","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"id_-comprehensive-testing-0-4-0","dir":"Changelog","previous_headings":"Major Breaking Changes - API Consolidation","what":"🧪 Comprehensive Testing","title":"realestatebr 0.4.0","text":"New test suite: test-internal-functions-0.4.0.R 100 tests Registry validation: Ensures datasets proper internal function mappings Parameter consistency: Validates internal functions follow standard interface Hierarchical testing: Comprehensive RPPI access pattern validation","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"for-existing-code-breaking-changes-0-4-0","dir":"Changelog","previous_headings":"Migration Guide","what":"For Existing Code (Breaking Changes)","title":"realestatebr 0.4.0","text":"","code":"# OLD (0.3.x) - Will no longer work data <- get_abecip_indicators(table = \"sbpe\") data <- get_rppi(table = \"fipezap\") data <- get_bcb_realestate(table = \"all\")  # NEW (0.4.0) - Required migration data <- get_dataset(\"abecip\", table = \"sbpe\") data <- get_dataset(\"rppi\", table = \"fipezap\") data <- get_dataset(\"bcb_realestate\", table = \"all\")"},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"rppi-consolidation-0-4-0","dir":"Changelog","previous_headings":"Migration Guide","what":"RPPI Consolidation","title":"realestatebr 0.4.0","text":"","code":"# OLD - Multiple functions fipezap <- get_rppi_fipezap() igmi <- get_rppi_igmi() bis <- get_rppi_bis()  # NEW - Unified hierarchical access fipezap <- get_dataset(\"rppi\", table = \"fipezap\") igmi <- get_dataset(\"rppi\", table = \"igmi\") bis <- get_dataset(\"rppi\", table = \"bis\")"},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"internal-architecture-0-4-0","dir":"Changelog","previous_headings":"Technical Implementation","what":"Internal Architecture","title":"realestatebr 0.4.0","text":"12 internal fetch functions: fetch_rppi(), fetch_abecip(), etc. Registry system: Complete mapping datasets.yaml Fallback mechanism: get_from_internal_function() → get_from_legacy_function() NAMESPACE cleanup: exports get_dataset(), list_datasets(), utilities","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"backward-compatibility-0-4-0","dir":"Changelog","previous_headings":"Technical Implementation","what":"Backward Compatibility","title":"realestatebr 0.4.0","text":"Phase 1: Internal functions call legacy functions gradual transition Testing: Comprehensive test coverage ensures functionality preservation Error handling: Graceful degradation informative error messages release represents major architectural shift toward unified, maintainable API. introduces breaking changes, new interface significantly simpler powerful. Full Changelog: https://github.com/viniciusoike/realestatebr/compare/v0.3.0…v0.4.0","code":""},{"path":[]},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"id_-phase-data-pipeline-implementation-complete-0-3-0","dir":"Changelog","previous_headings":"Major Features and Improvements","what":"🎯 Phase 2: Data Pipeline Implementation Complete","title":"realestatebr 0.3.0","text":"{targets} Pipeline Framework: Implemented comprehensive targets workflow automated data processing validation Automated Data Workflows: Added daily weekly GitHub Actions workflows using targets pipeline Data Validation Infrastructure: Added comprehensive validation rules reporting datasets Pipeline Performance Monitoring: Added automated report generation validation status tracking","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"id_-enhanced-data-processing-0-3-0","dir":"Changelog","previous_headings":"Major Features and Improvements","what":"📊 Enhanced Data Processing","title":"realestatebr 0.3.0","text":"Targets Pipeline: _targets.R workflow automated dependency management parallel processing Validation System: Comprehensive data validation rules automated quality checks Pipeline Helpers: Centralized helper functions consistent data processing across sources Report Generation: Automated pipeline status reports data quality summaries","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"id_-improved-function-reliability-0-3-0","dir":"Changelog","previous_headings":"Major Features and Improvements","what":"🔧 Improved Function Reliability","title":"realestatebr 0.3.0","text":"Error Handling: Enhanced error handling cache.R better fallback mechanisms Function Fixes: Fixed parameter bugs get_abrainc_indicators() (category → table) Data Access: Improved get_nre_ire() use internal package data directly Internal Data: Updated sysdata.rda latest processed datasets","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"id_-infrastructure-improvements-0-3-0","dir":"Changelog","previous_headings":"Major Features and Improvements","what":"🚀 Infrastructure Improvements","title":"realestatebr 0.3.0","text":"Workflow Automation: Replaced single update workflow focused daily/weekly pipelines Cache Management: Improved cache validation fallback strategies Data Source Updates: Enhanced FGV data cleaning improved formatting Dependency Updates: Added targets tarchetypes package dependencies","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"id_-new-data-sources-0-3-0","dir":"Changelog","previous_headings":"Major Features and Improvements","what":"📈 New Data Sources","title":"realestatebr 0.3.0","text":"B3 Stocks: Added enhanced B3 stock data processing standardized formatting FGV Indicators: Improved FGV consultation data processing validation Industrial Production: Enhanced CBIC PIM data integration Construction Materials: Updated CBIC cement steel data processing","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"targets-pipeline-architecture-0-3-0","dir":"Changelog","previous_headings":"Technical Implementation","what":"Targets Pipeline Architecture","title":"realestatebr 0.3.0","text":"Automated Processing: datasets now processed unified targets pipeline Quality Assurance: Built-validation quality checks data sources Performance Monitoring: Real-time pipeline status error reporting Dependency Management: Automatic detection data updates re-processing","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"enhanced-error-handling-0-3-0","dir":"Changelog","previous_headings":"Technical Implementation","what":"Enhanced Error Handling","title":"realestatebr 0.3.0","text":"Graceful Degradation: Improved fallback mechanisms failed data retrievals Better Diagnostics: Enhanced error messages troubleshooting information Retry Logic: Smart retry mechanisms exponential backoff Progress Reporting: Real-time progress updates long-running operations","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"data-quality-improvements-0-3-0","dir":"Changelog","previous_headings":"Technical Implementation","what":"Data Quality Improvements","title":"realestatebr 0.3.0","text":"Validation Rules: Comprehensive validation datasets Metadata Tracking: Enhanced metadata preservation source tracking Format Standardization: Consistent data formatting across sources Quality Metrics: Automated quality assessment reporting","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"for-existing-users-0-3-0","dir":"Changelog","previous_headings":"Migration Notes","what":"For Existing Users","title":"realestatebr 0.3.0","text":"existing functions continue work unchanged Enhanced reliability performance new pipeline backend Improved error messages troubleshooting information Better cache management fallback strategies","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"for-developers-0-3-0","dir":"Changelog","previous_headings":"Migration Notes","what":"For Developers","title":"realestatebr 0.3.0","text":"New targets pipeline provides foundation custom data workflows Enhanced validation framework quality assurance Standardized helper functions consistent data processing Comprehensive pipeline documentation examples release establishes foundation automated data processing validation, setting stage Phase 3 implementation large dataset support. Full Changelog: https://github.com/viniciusoike/realestatebr/compare/v0.2.0…v0.3.0","code":""},{"path":[]},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"id_-phase-modernization-complete-0-2-0","dir":"Changelog","previous_headings":"Major Features and Improvements","what":"🎯 Phase 1 Modernization Complete","title":"realestatebr 0.2.0","text":"Modernized 13 core get_* functions consistent APIs, CLI-based error handling, progress reporting Standardized function signatures table, cached, quiet, max_retries parameters Robust error handling retry logic, exponential backoff, informative error messages Enhanced documentation comprehensive examples @section blocks","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"id_-new-unified-data-architecture-0-2-0","dir":"Changelog","previous_headings":"Major Features and Improvements","what":"📊 New Unified Data Architecture","title":"realestatebr 0.2.0","text":"list_datasets() - Discover available datasets filtering capabilities get_dataset() - Unified data access function intelligent fallback Registry system inst/extdata/datasets.yaml centralized dataset management Improved caching standardized cache location validation","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"id_-api-standardization-0-2-0","dir":"Changelog","previous_headings":"Major Features and Improvements","what":"🔧 API Standardization","title":"realestatebr 0.2.0","text":"Introduced table parameter replacing category across functions Backward compatibility maintained deprecation warnings category parameter Consistent return types - single tibble default, list table = \"\" Metadata attributes returned data source tracking download info","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"id_-new-data-sources-0-2-0","dir":"Changelog","previous_headings":"Major Features and Improvements","what":"📈 New Data Sources","title":"realestatebr 0.2.0","text":"get_cbic_cement() - Cement consumption, production, CUB prices get_cbic_steel() - Steel prices production data get_cbic_pim() - Industrial production indices Enhanced RPPI suite improved coordination error handling Updated B3 stock data standardized column names","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"id_-performance-and-reliability-0-2-0","dir":"Changelog","previous_headings":"Major Features and Improvements","what":"🚀 Performance and Reliability","title":"realestatebr 0.2.0","text":"Progress reporting cli package integration long-running operations Exponential backoff failed web scraping API calls Parallel processing support web scraping functions Comprehensive input validation helpful error messages","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"id_-bilingual-support-0-2-0","dir":"Changelog","previous_headings":"Major Features and Improvements","what":"🌐 Bilingual Support","title":"realestatebr 0.2.0","text":"Translation system Portuguese/English column names values Standardized naming conventions across datasets Region state name translations geographic data","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"parameter-changes-0-2-0","dir":"Changelog","previous_headings":"Breaking Changes","what":"Parameter Changes","title":"realestatebr 0.2.0","text":"Backward compatibility maintained deprecation warnings removed future version Migration: Replace category = \"value\" table = \"value\"","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"cache-location-0-2-0","dir":"Changelog","previous_headings":"Breaking Changes","what":"Cache Location","title":"realestatebr 0.2.0","text":"Cache moved cached_data/ inst/cached_data/ package compliance Existing cache files automatically migrated","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"fully-modernized-functions-0-2-0","dir":"Changelog","previous_headings":"Modernized Functions","what":"Fully Modernized (13 functions)","title":"realestatebr 0.2.0","text":"get_abecip_indicators() - ABECIP real estate financing data get_abrainc_indicators() - ABRAINC launches sales data get_b3_stocks() - B3 stock market data improved column naming get_bcb_realestate() - Central Bank real estate credit data get_bcb_series() - BCB macroeconomic time series get_rppi_bis() - Bank International Settlements RPPI data get_cbic_cement() - CBIC cement industry data (NEW) get_cbic_steel() - CBIC steel industry data (NEW) get_cbic_pim() - CBIC industrial production data (NEW) get_fgv_indicators() - FGV construction confidence indicators get_nre_ire() - Real Estate Index NRE-Poli USP get_property_records() - Property registration data robust Excel processing get_rppi() - Comprehensive RPPI coordinator sources get_secovi() - SECOVI-SP real estate data parallel processing","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"legacy-functions-maintained-0-2-0","dir":"Changelog","previous_headings":"Modernized Functions","what":"Legacy Functions (Maintained)","title":"realestatebr 0.2.0","text":"get_rppi_bis() - Main function modernized backend single tibble returns get_itbi() get_itbi_bhe() - Planned Phase 3 (DuckDB integration)","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"new-architecture-components-0-2-0","dir":"Changelog","previous_headings":"Infrastructure Improvements","what":"New Architecture Components","title":"realestatebr 0.2.0","text":"Dataset registry system YAML configuration Unified cache management validation fallback Translation framework multilingual support Helper function ecosystem robust web operations","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"developer-experience-0-2-0","dir":"Changelog","previous_headings":"Infrastructure Improvements","what":"Developer Experience","title":"realestatebr 0.2.0","text":"Comprehensive test suite 35+ tests covering modernized functions Consistent documentation patterns @section blocks examples CLI-based development workflow devtools integration GitHub Actions automated testing deployment","code":""},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"for-existing-code-0-2-0","dir":"Changelog","previous_headings":"Migration Guide","what":"For Existing Code","title":"realestatebr 0.2.0","text":"","code":"# Old (deprecated but still works) data <- get_abecip_indicators(category = \"all\")  # New (recommended) data <- get_abecip_indicators(table = \"all\")"},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"for-new-code-0-2-0","dir":"Changelog","previous_headings":"Migration Guide","what":"For New Code","title":"realestatebr 0.2.0","text":"","code":"# Discover available datasets datasets <- list_datasets()  # Get data with unified interface data <- get_dataset(\"abecip_indicators\")  # Use modernized functions with progress data <- get_abecip_indicators(table = \"indicators\", quiet = FALSE)"},{"path":[]},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"dependencies-0-2-0","dir":"Changelog","previous_headings":"Technical Details","what":"Dependencies","title":"realestatebr 0.2.0","text":"Added: cli modern error handling progress reporting Enhanced: Better integration dplyr, readr, httr, rvest Maintained: Full backward compatibility existing dependencies","code":""},{"path":"https://viniciusoike.github.io/realestatebr/news/index.html","id":"performance-0-2-0","dir":"Changelog","previous_headings":"Technical Details","what":"Performance","title":"realestatebr 0.2.0","text":"Improved web scraping intelligent retry logic Faster cache access optimized file structure Better memory usage streaming lazy loading appropriate release represents completion Phase 1 modernization, establishing solid foundation Phase 2 (data pipeline automation) Phase 3 (large dataset support DuckDB). Full Changelog: https://github.com/viniciusoike/realestatebr/compare/v0.1.5…v0.2.0","code":""}]
