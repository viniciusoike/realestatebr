% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_secovi.R
\name{get_secovi}
\alias{get_secovi}
\title{Import data from Secovi-SP}
\usage{
get_secovi(table = "all", cached = FALSE, quiet = FALSE, max_retries = 3L)
}
\arguments{
\item{table}{Character. One of \code{'condo'}, \code{'rent'}, \code{'launch'}, \code{'sale'} or \code{'all'}
(default).}

\item{cached}{Logical. If \code{TRUE}, attempts to load data from package cache
using the unified dataset architecture.}

\item{quiet}{Logical. If \code{TRUE}, suppresses progress messages and warnings.
If \code{FALSE} (default), provides detailed progress reporting.}

\item{max_retries}{Integer. Maximum number of retry attempts for failed
web scraping operations. Defaults to 3.}
}
\value{
A \code{tibble} with SECOVI-SP real estate data. The return includes
metadata attributes:
\describe{
\item{download_info}{List with download statistics}
\item{source}{Data source used (web or cache)}
\item{download_time}{Timestamp of download}
}
}
\description{
Download and clean real estate information from Sao Paulo (SP) made available
by SECOVI-SP with modern error handling, progress reporting, and robust
web scraping capabilities.
}
\details{
This function scrapes real estate data from SECOVI-SP website including
condominium fees, rental market data, launches, and sales information.
The function handles parallel processing for data cleaning while maintaining
progress reporting.
}
\section{Progress Reporting}{

When \code{quiet = FALSE}, the function provides detailed progress information
including web scraping status and data processing steps, even during
parallel operations.
}

\section{Error Handling}{

The function includes retry logic for failed web scraping attempts and
robust error handling for parallel data processing operations.
}

\examples{
\dontrun{
# Download all available data (with progress)
secovi <- get_secovi(quiet = FALSE)

# Download only a specific series
sales <- get_secovi("sale")

# Use cached data for faster access
cached_data <- get_secovi(cached = TRUE)

# Check download metadata
attr(sales, "download_info")
}
}
